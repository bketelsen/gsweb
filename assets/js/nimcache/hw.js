/* Generated by the Nim Compiler v0.19.9 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI275037 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI219031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI275272 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI275271 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI40054 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI228039 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40052 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI230253 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI192256 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI230234 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI230231 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI230228 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI36032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI36026 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI45687 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI230202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI230206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI230204 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI230665 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI40060 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI205211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI75084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI75085 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI187771 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI187767 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI187135 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI187723 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI187711 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI187732 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI187730 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI187015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI187724 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI187715 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI63441 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63437 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63433 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63429 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63425 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63421 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63417 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63413 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63405 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63401 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63393 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63389 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63385 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63381 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63377 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63373 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63369 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63365 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI63204 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI63274 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI63220 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI63519 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI63517 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI63515 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI63224 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI63222 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI205207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI205209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI63276 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40058 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40050 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40028 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40042 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40046 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI36006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI52144 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40118 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI36016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI36042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI40112 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI40026 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI36040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI275022 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI275015 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI275027 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI275026 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI275017 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI275091 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NNI275022 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI36040, name: "name", sons: null}, 
{kind: 1, offset: "description", len: 0, typ: NTI36040, name: "description", sons: null}]};
NTI275022.node = NNI275022;
NTI275015.base = NTI275022;
NTI275027.base = NTI275015;
var NNI275026 = {kind: 1, offset: "courses", len: 0, typ: NTI275027, name: "courses", sons: null};
NTI275026.node = NNI275026;
NTI275017.base = NTI275026;
var NNI275091 = {kind: 1, offset: "val", len: 0, typ: NTI275017, name: "val", sons: null};
NTI275091.node = NNI275091;
NTI40112.base = NTI40026;
NTI40118.base = NTI40026;
var NNI40026 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI40112, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI36040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI36040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI36016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI40118, name: "up", sons: null}]};
NTI40026.node = NNI40026;
var NNI40008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40008.node = NNI40008;
NTI40026.base = NTI40008;
var NNI52144 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI52144.node = NNI52144;
var NNI40046 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40046.node = NNI40046;
var NNI40042 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40042.node = NNI40042;
var NNI40028 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40028.node = NNI40028;
NTI40028.base = NTI40026;
NTI40042.base = NTI40028;
NTI40046.base = NTI40042;
var NNI40050 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40050.node = NNI40050;
NTI40050.base = NTI40028;
var NNI40058 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40058.node = NNI40058;
NTI40058.base = NTI40028;
var NNI63276 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI36042, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI36042, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI36042, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI36042, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI36042, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI36042, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI36042, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI36042, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI36042, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI36042, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI36042, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI36042, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI36042, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI36042, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI36042, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI36042, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI36042, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI36042, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI36042, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI36042, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI36042, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI36042, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI36042, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI36042, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI36042, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI36042, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI36042, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI36042, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI36042, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI36042, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI36042, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI36042, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI36042, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI36042, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI36042, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI36042, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI36042, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI36042, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI36042, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI36042, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI36042, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI36042, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI36042, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI36042, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI36042, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI36042, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI36042, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI36042, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI36042, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI36042, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI36042, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI36042, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI36042, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI36042, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI36042, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI36042, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI36042, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI36042, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI36042, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI36042, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI36042, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI36042, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI36042, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI36042, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI36042, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI36042, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI36042, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI36042, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI36042, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI36042, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI36042, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI36042, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI36042, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI36042, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI36042, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI36042, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI36042, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI36042, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI36042, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI36042, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI36042, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI36042, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI36042, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI36042, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI36042, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI36042, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI36042, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI36042, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI36042, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI36042, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI36006, name: "zIndex", sons: null}]};
NTI63276.node = NNI63276;
NTI63276.base = NTI40008;
var NNI205207 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI205207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI205207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI205207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI205207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI205207, name: "pkDetach", len: 0, sons: null}}};
NTI205207.node = NNI205207;
NTI63515.base = NTI63222;
NTI63517.base = NTI63222;
NTI63519.base = NTI63222;
var NNI63220 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI63220, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI63220, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI63220, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI63220, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI63220, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI63220, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI63220, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI63220, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI63220, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI63220, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI63220, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI63220, name: "NotationNode", len: 0, sons: null}}};
NTI63220.node = NNI63220;
NTI63274.base = NTI63276;
var NNI63224 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI63515, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI63517, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI63519, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI36042, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI63222, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI63222, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI63222, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI36042, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI63220, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI36042, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI63222, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI63222, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI36042, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI63274, name: "style", sons: null}]};
NTI63224.node = NNI63224;
var NNI63204 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI63365, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI63369, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI63373, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI63377, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI63381, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI63385, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI63389, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI63393, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI63397, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI63401, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI63405, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI63409, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI63413, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI63417, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI63421, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI63425, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI63429, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI63433, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI63437, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI63441, name: "onunload", sons: null}]};
NTI63204.node = NNI63204;
NTI63204.base = NTI40008;
NTI63224.base = NTI63204;
NTI63222.base = NTI63224;
var NNI187015 = {kind: 2, offset: 0, typ: null, name: null, len: 118, sons: {"0": {kind: 1, offset: 0, typ: NTI187015, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI187015, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI187015, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI187015, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI187015, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI187015, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI187015, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI187015, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI187015, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI187015, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI187015, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI187015, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI187015, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI187015, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI187015, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI187015, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI187015, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI187015, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI187015, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI187015, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI187015, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI187015, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI187015, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI187015, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI187015, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI187015, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI187015, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI187015, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI187015, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI187015, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI187015, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI187015, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI187015, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI187015, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI187015, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI187015, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI187015, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI187015, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI187015, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI187015, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI187015, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI187015, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI187015, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI187015, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI187015, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI187015, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI187015, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI187015, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI187015, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI187015, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI187015, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI187015, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI187015, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI187015, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI187015, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI187015, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI187015, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI187015, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI187015, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI187015, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI187015, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI187015, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI187015, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI187015, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI187015, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI187015, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI187015, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI187015, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI187015, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI187015, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI187015, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI187015, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI187015, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI187015, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI187015, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI187015, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI187015, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI187015, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI187015, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI187015, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI187015, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI187015, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI187015, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI187015, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI187015, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI187015, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI187015, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI187015, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI187015, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI187015, name: "table", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI187015, name: "caption", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI187015, name: "colgroup", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI187015, name: "col", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI187015, name: "tbody", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI187015, name: "thead", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI187015, name: "tfoot", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI187015, name: "tr", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI187015, name: "td", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI187015, name: "th", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI187015, name: "form", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI187015, name: "fieldset", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI187015, name: "legend", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI187015, name: "label", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI187015, name: "input", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI187015, name: "button", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI187015, name: "select", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI187015, name: "datalist", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI187015, name: "optgroup", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI187015, name: "option", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI187015, name: "textarea", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI187015, name: "keygen", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI187015, name: "output", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI187015, name: "progress", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI187015, name: "meter", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI187015, name: "details", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI187015, name: "summary", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI187015, name: "command", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI187015, name: "menu", len: 0, sons: null}}};
NTI187015.node = NNI187015;
NTI187730.base = NTI187715;
NTI187732.base = NTI36042;
var NNI187135 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI187135, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI187135, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI187135, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI187135, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI187135, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI187135, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI187135, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI187135, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI187135, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI187135, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI187135, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI187135, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI187135, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI187135, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI187135, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI187135, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI187135, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI187135, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI187135, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI187135, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI187135, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI187135, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI187135, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI187135, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI187135, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI187135, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI187135, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI187135, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI187135, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI187135, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI187135, name: "onkeyuplater", len: 0, sons: null}}};
NTI187135.node = NNI187135;
var NNI187723 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI187135, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI187767, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI187771, name: "Field2", sons: null}]};
NTI187723.node = NNI187723;
NTI187711.base = NTI187723;
var NNI75084 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI75084.node = NNI75084;
NTI75085.base = NTI75084;
var NNI187724 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI187015, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI36006, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI36042, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI36042, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI36042, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI187730, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI187732, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI187711, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI75085, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI63222, name: "dom", sons: null}]};
NTI187724.node = NNI187724;
NTI187724.base = NTI40008;
NTI187715.base = NTI187724;
var NNI205209 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI205207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI63222, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI63222, name: "current", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI187715, name: "n", sons: null}]};
NTI205209.node = NNI205209;
var NNI205211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI187715, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI187715, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI36006, name: "pos", sons: null}]};
NTI205211.node = NNI205211;
var NNI40062 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40062.node = NNI40062;
NTI40062.base = NTI40028;
var NNI40060 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40060.node = NNI40060;
NTI40060.base = NTI40028;
var NNI230202 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI230202, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI230202, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI230202, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI230202, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI230202, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI230202, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI230202, name: "JArray", len: 0, sons: null}}};
NTI230202.node = NNI230202;
var NNI230234 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI192256, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI36040, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI230204, name: "Field3", sons: null}]};
NTI230234.node = NNI230234;
NTI230231.base = NTI230234;
var NNI230228 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI230231, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI36006, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI36006, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI36006, name: "last", sons: null}]};
NTI230228.node = NNI230228;
NTI230253.base = NTI230204;
var NNI230206 = {kind: 3, offset: "kind", len: 7, typ: NTI230202, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI36040, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI45687, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI36026, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI36032, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI230228, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI230253, name: "elems", sons: null}]]};
NTI230206.node = NNI230206;
NTI230204.base = NTI230206;
NTI230665.base = NTI230204;
var NNI40052 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40052.node = NNI40052;
NTI40052.base = NTI40028;
var NNI228039 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI228039.node = NNI228039;
NTI228039.base = NTI40052;
var NNI40054 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40054.node = NNI40054;
NTI40054.base = NTI40052;
NTI275272.base = NTI275022;
NTI275271.base = NTI275272;
var NNI219031 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI219031.node = NNI219031;
NTI219031.base = NTI40028;
var NNI275037 = {kind: 1, offset: "val", len: 0, typ: NTI275017, name: "val", sons: null};
NTI275037.node = NNI275037;

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_54030, src_54031, ti_54032) {
	var result_54219 = null;

		switch (ti_54032.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_54001(ti_54032))) {
			result_54219 = src_54031;
			}
			else {
				result_54219 = [src_54031[0], src_54031[1]];
			}
			
			break;
		case 19:
			      if (dest_54030 === null || dest_54030 === undefined) {
        dest_54030 = {};
      }
      else {
        for (var key in dest_54030) { delete dest_54030[key]; }
      }
      for (var key in src_54031) { dest_54030[key] = src_54031[key]; }
      result_54219 = dest_54030;
    
			break;
		case 18:
		case 17:
			if (!((ti_54032.base == null))) {
			result_54219 = nimCopy(dest_54030, src_54031, ti_54032.base);
			}
			else {
			if ((ti_54032.kind == 17)) {
			result_54219 = (dest_54030 === null || dest_54030 === undefined) ? {m_type: ti_54032} : dest_54030;
			}
			else {
				result_54219 = (dest_54030 === null || dest_54030 === undefined) ? {} : dest_54030;
			}
			}
			nimCopyAux(result_54219, src_54031, ti_54032.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_54031 === null) {
        result_54219 = null;
      }
      else {
        if (dest_54030 === null || dest_54030 === undefined) {
          dest_54030 = new Array(src_54031.length);
        }
        else {
          dest_54030.length = src_54031.length;
        }
        result_54219 = dest_54030;
        for (var i = 0; i < src_54031.length; ++i) {
          result_54219[i] = nimCopy(result_54219[i], src_54031[i], ti_54032.base);
        }
      }
    
			break;
		case 28:
			      if (src_54031 !== null) {
        result_54219 = src_54031.slice(0);
      }
    
			break;
		default: 
			result_54219 = src_54031;
			break;
		}

	return result_54219;

}

function cstrToNimstr(c_53029) {
		  var ln = c_53029.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_53029.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_53029.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function makeNimstrLit(c_53012) {
		  var ln = c_53012.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_53012.charCodeAt(i);
  }
  return result;
  

	
}

function arrayConstr(len_54280, value_54281, typ_54282) {
		    var result = new Array(len_54280);
    for (var i = 0; i < len_54280; ++i) result[i] = nimCopy(null, value_54281, typ_54282);
    return result;
  

	
}

function toJSStr(s_53046) {
		  if (s_53046 === null) return "";
  var len = s_53046.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_53046[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_53046[i] < 128)
      asciiPart[i] = fcc(s_53046[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_52618, ename_52619) {
		e_52618.name = ename_52619;
		if ((excHandler == 0)) {
		unhandledException(e_52618);
		}
		
		e_52618.trace = nimCopy(null, raw_write_stack_trace_52441(), NTI36040);
		throw e_52618;

	
}

function addInt(a_53403, b_53404) {
		    var result = a_53403 + b_53404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_tag_187699 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];

function chckIndx(i_54299, a_54300, b_54301) {
			var Tmp1;

	var result_54302 = 0;

	BeforeRet: do {
			if (!(a_54300 <= i_54299)) Tmp1 = false; else {				Tmp1 = (i_54299 <= b_54301);			}		if (Tmp1) {
		result_54302 = i_54299;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_54302;

}

function subInt(a_53421, b_53422) {
		    var result = a_53421 - b_53422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_event_name_187705 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"];

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function nimMin(a_53740, b_53741) {
		var Tmp1;

	var result_53742 = 0;

	BeforeRet: do {
		if ((a_53740 <= b_53741)) {
		Tmp1 = a_53740;
		}
		else {
		Tmp1 = b_53741;
		}
		
		result_53742 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_53742;

}

function chckRange(i_54318, a_54319, b_54320) {
			var Tmp1;

	var result_54321 = 0;

	BeforeRet: do {
			if (!(a_54319 <= i_54318)) Tmp1 = false; else {				Tmp1 = (i_54318 <= b_54320);			}		if (Tmp1) {
		result_54321 = i_54318;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_54321;

}
var ConstSet2 = setConstr(6);

function raiseFieldError(f_52968) {
		var e_52972 = null;
		e_52972 = {m_type: NTI40060, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_52972.message = nimCopy(null, (f_52968 || []).concat(makeNimstrLit(" is not accessible") || []), NTI36040);
		e_52972.parent = null;
		raiseException(e_52972, "FieldError");

	
}
var ConstSet3 = setConstr(6);
var ConstSet4 = setConstr(5);

function eqStrings(a_53241, b_53242) {
		    if (a_53241 == b_53242) return true;
    if (a_53241 === null && b_53242.length == 0) return true;
    if (b_53242 === null && a_53241.length == 0) return true;
    if ((!a_53241) || (!b_53242)) return false;
    var alen = a_53241.length;
    if (alen != b_53242.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_53241[i] != b_53242[i]) return false;
    return true;
  

	
}

function mulInt(a_53439, b_53440) {
		    var result = a_53439 * b_53440;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet5 = setConstr(5);
var ConstSet6 = setConstr(2);
var ConstSet7 = setConstr(3);
var ConstSet8 = setConstr(4);
var ConstSet9 = setConstr(1);
var ConstSet10 = setConstr(6);

function mnewString(len_53063) {
		    return new Array(len_53063);
  

	
}

function addChar(x_54449, c_54450) {
		x_54449.push(c_54450);

	
}
var ConstSet11 = setConstr([48, 57]);
var ConstSet12 = setConstr(0, 125);
var ConstSet13 = setConstr([48, 57]);
var ConstSet14 = setConstr([65, 90]);

function nimMax(a_53758, b_53759) {
		var Tmp1;

	var result_53760 = 0;

	BeforeRet: do {
		if ((b_53759 <= a_53758)) {
		Tmp1 = a_53758;
		}
		else {
		Tmp1 = b_53759;
		}
		
		result_53760 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_53760;

}
var ConstSet15 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);

function reprEnum(e_55080, typ_55081) {
	var result_55082 = null;

	var F={procname:"system.reprEnum",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/system/reprjs.nim",line:0};
	framePtr = F;
		if (!(is_undefined_55084(typ_55081.node.sons[e_55080]))) {
		F.line = 38;
		result_55082 = nimCopy(null, makeNimstrLit(typ_55081.node.sons[e_55080].name), NTI36040);
		}
		else {
			F.line = 40;
			result_55082 = nimCopy(null, (cstrToNimstr((e_55080)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI36040);
		}
		
	framePtr = F.prev;

	return result_55082;

}
var ConstSet16 = setConstr(6);
var ConstSet17 = setConstr(6);
var ConstSet18 = setConstr(5);
var ConstSet19 = setConstr(5, 0);
var ConstSet20 = setConstr(6);
var ConstSet21 = setConstr(5, 0);
var ConstSet22 = setConstr(4, 0);
var ConstSet23 = setConstr(5);
var ConstSet24 = setConstr(4, 0);
var ConstSet25 = setConstr(4);
var ConstSet26 = setConstr(4, 0);
var ConstSet27 = setConstr(4, 0);
var ConstSet28 = setConstr(4);
var nimvm_43589 = false;
var nim_program_result = 0;
var global_raise_hook_50218 = [null];
var local_raise_hook_50223 = [null];
var out_of_mem_hook_50226 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var gid_188465 = [0];
var object_id_192445 = [0];
var vcomponents_199027 = [{}];
var kxi_205324 = [null];
var lc_274252 = [{}];

function none_275084() {
	var result_275103 = {val: null};

	var F={procname:"none.none",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/options.nim",line:0};
	framePtr = F;
	framePtr = F.prev;

	return result_275103;

}

function is_fat_pointer_54001(ti_54003) {
	var result_54004 = false;

	BeforeRet: do {
		result_54004 = !((ConstSet1[ti_54003.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_54004;

}

function nimCopyAux(dest_54035, src_54036, n_54038) {
		switch (n_54038.kind) {
		case 0:
			break;
		case 1:
			      dest_54035[n_54038.offset] = nimCopy(dest_54035[n_54038.offset], src_54036[n_54038.offset], n_54038.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_54038.sons.length; i++) {
      nimCopyAux(dest_54035, src_54036, n_54038.sons[i]);
    }
    
			break;
		case 3:
			      dest_54035[n_54038.offset] = nimCopy(dest_54035[n_54038.offset], src_54036[n_54038.offset], n_54038.typ);
      for (var i = 0; i < n_54038.sons.length; ++i) {
        nimCopyAux(dest_54035, src_54036, n_54038.sons[i][1]);
      }
    
			break;
		}

	
}

function none_275077() {
	var result_275081 = {val: null};

	var F={procname:"none.none",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/options.nim",line:0};
	framePtr = F;
		F.line = 104;
		nimCopy(result_275081, none_275084(), NTI275091);
	framePtr = F.prev;

	return result_275081;

}

function new_state_275070() {
	var result_275072 = null;

	var F={procname:"hw.newState",prev:framePtr,filename:"hw.nim",line:0};
	framePtr = F;
		F.line = 22;
		result_275072 = {list: none_275077(), loading: false, status: 200};
	framePtr = F.prev;

	return result_275072;

}
var state_275143 = [new_state_275070()];

function add_50238(x_50241, x_50241_Idx, y_50242) {
		      if (x_50241[x_50241_Idx] === null) { x_50241[x_50241_Idx] = []; }
      var off = x_50241[x_50241_Idx].length;
      x_50241[x_50241_Idx].length += y_50242.length;
      for (var i = 0; i < y_50242.length; ++i) {
        x_50241[x_50241_Idx][off+i] = y_50242.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_52139(f_52141) {
					var Tmp3;

	var result_52142 = [null];

		var it_52150 = f_52141;
		var i_52152 = 0;
		var total_52154 = 0;
		var temp_frames_52161 = arrayConstr(64, {Field0: null, Field1: 0}, NTI52144);
		L1: do {
				L2: while (true) {
					if (!!((it_52150 == null))) Tmp3 = false; else {						Tmp3 = (i_52152 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_52161[i_52152].Field0 = it_52150.procname;
					temp_frames_52161[i_52152].Field1 = it_52150.line;
					i_52152 += 1;
					total_52154 += 1;
					it_52150 = it_52150.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_52150 == null))) break L5;
					total_52154 += 1;
					it_52150 = it_52150.prev;
				}
		} while(false);
		result_52142[0] = nimCopy(null, [], NTI36040);
		if (!((total_52154 == i_52152))) {
		if (result_52142[0] != null) { result_52142[0] = (result_52142[0]).concat(makeNimstrLit("(")); } else { result_52142[0] = makeNimstrLit("("); };
		if (result_52142[0] != null) { result_52142[0] = (result_52142[0]).concat(cstrToNimstr(((total_52154 - i_52152))+"")); } else { result_52142[0] = cstrToNimstr(((total_52154 - i_52152))+"").slice(); };
		if (result_52142[0] != null) { result_52142[0] = (result_52142[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_52142[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_52424 = 0;
			var colontmp__276838 = 0;
			colontmp__276838 = (i_52152 - 1);
			var res_276844 = colontmp__276838;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_276844)) break L8;
						j_52424 = res_276844;
						add_50238(result_52142, 0, temp_frames_52161[j_52424].Field0);
						if ((0 < temp_frames_52161[j_52424].Field1)) {
						if (result_52142[0] != null) { result_52142[0] = (result_52142[0]).concat(makeNimstrLit(", line: ")); } else { result_52142[0] = makeNimstrLit(", line: "); };
						if (result_52142[0] != null) { result_52142[0] = (result_52142[0]).concat(cstrToNimstr((temp_frames_52161[j_52424].Field1)+"")); } else { result_52142[0] = cstrToNimstr((temp_frames_52161[j_52424].Field1)+"").slice(); };
						}
						
						if (result_52142[0] != null) { result_52142[0] = (result_52142[0]).concat(makeNimstrLit("\x0A")); } else { result_52142[0] = makeNimstrLit("\x0A"); };
						res_276844 -= 1;
					}
			} while(false);
		} while(false);

	return result_52142[0];

}

function raw_write_stack_trace_52441() {
	var result_52443 = null;

		if (!((framePtr == null))) {
		result_52443 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_52139(framePtr) || []), NTI36040);
		}
		else {
			result_52443 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI36040);
		}
		

	return result_52443;

}

function unhandledException(e_52505) {
		var buf_52506 = [[]];
		if (!(((e_52505.message != null ? e_52505.message.length : 0) == 0))) {
		if (buf_52506[0] != null) { buf_52506[0] = (buf_52506[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_52506[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_52506[0] != null) { buf_52506[0] = (buf_52506[0]).concat(e_52505.message); } else { buf_52506[0] = e_52505.message.slice(); };
		}
		else {
		if (buf_52506[0] != null) { buf_52506[0] = (buf_52506[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_52506[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_52506[0] != null) { buf_52506[0] = (buf_52506[0]).concat(makeNimstrLit(" [")); } else { buf_52506[0] = makeNimstrLit(" ["); };
		add_50238(buf_52506, 0, e_52505.name);
		if (buf_52506[0] != null) { buf_52506[0] = (buf_52506[0]).concat(makeNimstrLit("]\x0A")); } else { buf_52506[0] = makeNimstrLit("]\x0A"); };
		if (buf_52506[0] != null) { buf_52506[0] = (buf_52506[0]).concat(raw_write_stack_trace_52441()); } else { buf_52506[0] = raw_write_stack_trace_52441().slice(); };
		var cbuf_52601 = toJSStr(buf_52506[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_52601);
  }
  else {
    throw cbuf_52601;
  }
  

	
}

function new_seq_215125(len_215129) {
	var result_215131 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 776;
		result_215131 = new Array(len_215129); for (var i=0;i<len_215129;++i) {result_215131[i]={k: 0, parent: null, current: null, n: null};}	framePtr = F.prev;

	return result_215131;

}

function new_seq_215177(len_215181) {
	var result_215183 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 776;
		result_215183 = new Array(len_215181); for (var i=0;i<len_215181;++i) {result_215183[i]={parent: null, newChild: null, pos: 0};}	framePtr = F.prev;

	return result_215183;

}

function raiseOverflow() {
		var e_52859 = null;
		e_52859 = {m_type: NTI40046, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_52859.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI36040);
		e_52859.parent = null;
		raiseException(e_52859, "OverflowError");

	
}

function sys_fatal_57237(message_57243) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 2976;
		var e_57245 = null;
		F.line = 2977;
		e_57245 = {m_type: NTI40050, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 2978;
		e_57245.message = nimCopy(null, message_57243, NTI36040);
		F.line = 2979;
		raiseException(e_57245, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_57232(msg_57234) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3934;
		sys_fatal_57237(msg_57234);
	framePtr = F.prev;

	
}

function failed_assert_impl_57280(msg_57282) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3941;
		raise_assert_57232(msg_57282);
	framePtr = F.prev;

	
}

function raiseIndexError() {
		var e_52943 = null;
		e_52943 = {m_type: NTI40058, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_52943.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI36040);
		e_52943.parent = null;
		raiseException(e_52943, "IndexError");

	
}

function valueHEX3D_187849(n_187851, v_187852) {
	var F={procname:"vdom.value=",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 156;
		n_187851.text = v_187852;
	framePtr = F.prev;

	
}

function value_187832(n_187834) {
	var result_187835 = null;

	var F={procname:"vdom.value",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 155;
		result_187835 = n_187834.text;
	framePtr = F.prev;

	return result_187835;

}

function wrap_event_205377(d_205379, n_205380, k_205381, action_205382) {

			function later_wrapper_205827() {

					function HEX3Aanonymous_205833(ev_205835) {

							function wrapper_205836() {
								var F={procname:":anonymous.wrapper",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
								framePtr = F;
									F.line = 72;
									var v_205839 = ev_205835.target.value;
									F.line = 73;
									valueHEX3D_187849(n_205831, v_205839);
									if (!(!((action_205830 == null)))) {
									F.line = 74;
									failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(74, 10) `action != nil` "));
									}
									
									F.line = 75;
									action_205830(ev_205835, n_205831);
									if (!((value_187832(n_205831) == v_205839))) {
									F.line = 77;
									ev_205835.target.value = value_187832(n_205831);
									}
									
								framePtr = F.prev;

								
							}

						var F={procname:"laterWrapper.:anonymous",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
						framePtr = F;
							if (!((timer_205832 == null))) {
							F.line = 103;
							clearTimeout(timer_205832);
							}
							
							F.line = 104;
							timer_205832 = setTimeout(wrapper_205836, 400);
						framePtr = F.prev;

						
					}

				var result_205829 = null;

				var F={procname:"wrapEvent.laterWrapper",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
				framePtr = F;
					F.line = 98;
					var action_205830 = action_205382;
					F.line = 99;
					var n_205831 = n_205380;
					F.line = 100;
					var timer_205832 = null;
					F.line = 101;
					result_205829 = HEX3Aanonymous_205833;
				framePtr = F.prev;

				return result_205829;

			}

			function enter_wrapper_205627() {

					function HEX3Aanonymous_205632(ev_205634) {
						var F={procname:"enterWrapper.:anonymous",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
						framePtr = F;
							if ((ev_205634.keyCode == 13)) {
							F.line = 72;
							var v_205636 = ev_205634.target.value;
							F.line = 73;
							valueHEX3D_187849(n_205631, v_205636);
							if (!(!((action_205630 == null)))) {
							F.line = 74;
							failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(74, 10) `action != nil` "));
							}
							
							F.line = 75;
							action_205630(ev_205634, n_205631);
							if (!((value_187832(n_205631) == v_205636))) {
							F.line = 77;
							ev_205634.target.value = value_187832(n_205631);
							}
							
							}
							
						framePtr = F.prev;

						
					}

				var result_205629 = null;

				var F={procname:"wrapEvent.enterWrapper",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
				framePtr = F;
					F.line = 92;
					var action_205630 = action_205382;
					F.line = 93;
					var n_205631 = n_205380;
					F.line = 94;
					result_205629 = HEX3Aanonymous_205632;
				framePtr = F.prev;

				return result_205629;

			}

			function std_wrapper_205384() {

					function HEX3Aanonymous_205389(ev_205391) {
								var Tmp1;
								var Tmp2;

						var F={procname:"stdWrapper.:anonymous",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
						framePtr = F;
								if ((n_205388.kind == 109)) Tmp2 = true; else {									Tmp2 = (n_205388.kind == 103);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_205388.kind == 105);								}							if (Tmp1) {
							F.line = 72;
							var v_205420 = ev_205391.target.value;
							F.line = 73;
							valueHEX3D_187849(n_205388, v_205420);
							if (!(!((action_205387 == null)))) {
							F.line = 74;
							failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(74, 10) `action != nil` "));
							}
							
							F.line = 75;
							action_205387(ev_205391, n_205388);
							if (!((value_187832(n_205388) == v_205420))) {
							F.line = 77;
							ev_205391.target.value = value_187832(n_205388);
							}
							
							}
							else {
								F.line = 89;
							action_205387(ev_205391, n_205388);
							}
							
						framePtr = F.prev;

						
					}

				var result_205386 = null;

				var F={procname:"wrapEvent.stdWrapper",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
				framePtr = F;
					F.line = 84;
					var action_205387 = action_205382;
					F.line = 85;
					var n_205388 = n_205380;
					F.line = 86;
					result_205386 = HEX3Aanonymous_205389;
				framePtr = F.prev;

				return result_205386;

			}

	var result_205383 = null;

	var F={procname:"karax.wrapEvent",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 106;
		switch (k_205381) {
		case 30:
			F.line = 108;
			result_205383 = later_wrapper_205827();
			F.line = 109;
			d_205379.addEventListener("keyup", result_205383, false);
			break;
		case 29:
			F.line = 111;
			result_205383 = enter_wrapper_205627();
			F.line = 112;
			d_205379.addEventListener("keyup", result_205383, false);
			break;
		default: 
			F.line = 114;
			result_205383 = std_wrapper_205384();
			F.line = 115;
			d_205379.addEventListener(to_event_name_187705[chckIndx(k_205381, 0, to_event_name_187705.length+0-1)-0], result_205383, false);
			break;
		}
	framePtr = F.prev;

	return result_205383;

}

function apply_events_206076(n_206078) {
	var F={procname:"karax.applyEvents",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 127;
		var dest_206079 = n_206078.dom;
		L1: do {
			F.line = 128;
			var i_206096 = 0;
			F.line = 3678;
			var colontmp__276887 = 0;
			F.line = 128;
			colontmp__276887 = (n_206078.events != null ? n_206078.events.length : 0);
			F.line = 3679;
			var i_276889 = 0;
			L2: do {
				F.line = 3680;
					L3: while (true) {
					if (!(i_276889 < colontmp__276887)) break L3;
						F.line = 128;
						i_206096 = i_276889;
						F.line = 129;
						n_206078.events[chckIndx(i_206096, 0, n_206078.events.length+0-1)-0]["Field2"] = wrap_event_205377(dest_206079, n_206078, n_206078.events[chckIndx(i_206096, 0, n_206078.events.length+0-1)-0]["Field0"], n_206078.events[chckIndx(i_206096, 0, n_206078.events.length+0-1)-0]["Field1"]);
						F.line = 3682;
						i_276889 = addInt(i_276889, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function apply_style_78027(n_78029, s_78030) {
	var F={procname:"vstyles.applyStyle",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vstyles.nim",line:0};
	framePtr = F;
		F.line = 299;
		n_78029.style = {};
		L1: do {
			F.line = 300;
			var i_78224 = 0;
			F.line = 2121;
			var colontmp__276900 = 0;
			F.line = 300;
			colontmp__276900 = subInt(s_78030.length, 1);
			F.line = 2127;
			var res_276902 = 0;
			L2: do {
				F.line = 2128;
					L3: while (true) {
					if (!(res_276902 <= colontmp__276900)) break L3;
						F.line = 300;
						i_78224 = res_276902;
						F.line = 301;
						n_78029.style[s_78030[i_78224]] = s_78030[addInt(i_78224, 1)];
						F.line = 2130;
						res_276902 = addInt(res_276902, 2);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function vnode_to_dom_206169(n_206171, kxi_206172) {
			var Tmp9;
			var Tmp10;

	var result_206173 = null;

	var F={procname:"karax.vnodeToDom",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((n_206171.kind == 0)) {
		F.line = 139;
		result_206173 = document.createTextNode(n_206171.text);
		F.line = 123;
		n_206171.dom = result_206173;
		if (!((n_206171.id == null))) {
		F.line = 124;
		kxi_205324[0].byId[n_206171.id] = n_206171;
		}
		
		}
		else {
		if ((n_206171.kind == 6)) {
		F.line = 142;
		result_206173 = document.createElement("div");
		F.line = 143;
		result_206173.innerHTML = n_206171.text;
		F.line = 123;
		n_206171.dom = result_206173;
		if (!((n_206171.id == null))) {
		F.line = 124;
		kxi_205324[0].byId[n_206171.id] = n_206171;
		}
		
		F.line = 145;
		break BeforeRet;
		}
		else {
		if ((n_206171.kind == 3)) {
		F.line = 147;
		var x_206256 = vcomponents_199027[0][n_206171.text](n_206171.kids);
		F.line = 148;
		result_206173 = vnode_to_dom_206169(x_206256, kxi_206172);
		F.line = 123;
		n_206171.dom = result_206173;
		if (!((n_206171.id == null))) {
		F.line = 124;
		kxi_205324[0].byId[n_206171.id] = n_206171;
		}
		
		F.line = 151;
		break BeforeRet;
		}
		else {
		if ((n_206171.kind == 4)) {
		F.line = 153;
		result_206173 = n_206171.dom;
		if (!(!((result_206173 == null)))) {
		F.line = 154;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(154, 12) `result != nil` "));
		}
		
		F.line = 123;
		n_206171.dom = result_206173;
		if (!((n_206171.id == null))) {
		F.line = 124;
		kxi_205324[0].byId[n_206171.id] = n_206171;
		}
		
		F.line = 157;
		break BeforeRet;
		}
		else {
		if ((n_206171.kind == 5)) {
		F.line = 159;
		var x_206429 = n_206171;
		if (!((x_206429.onAttachImpl == null))) {
		F.line = 160;
		x_206429.onAttachImpl(x_206429);
		}
		
		if (!(!((x_206429.renderImpl == null)))) {
		F.line = 161;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(161, 12) `x.renderImpl != nil` "));
		}
		
		if ((x_206429.expanded == null)) {
		F.line = 163;
		x_206429.expanded = x_206429.renderImpl(x_206429);
		}
		
		if (!(!((x_206429.expanded == null)))) {
		F.line = 165;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(165, 12) `x.expanded != nil` "));
		}
		
		F.line = 166;
		result_206173 = vnode_to_dom_206169(x_206429.expanded, kxi_206172);
		F.line = 123;
		n_206171.dom = result_206173;
		if (!((n_206171.id == null))) {
		F.line = 124;
		kxi_205324[0].byId[n_206171.id] = n_206171;
		}
		
		F.line = 168;
		break BeforeRet;
		}
		else {
			F.line = 170;
			result_206173 = document.createElement(to_tag_187699[chckIndx(n_206171.kind, 0, to_tag_187699.length+0-1)-0]);
			F.line = 123;
			n_206171.dom = result_206173;
			if (!((n_206171.id == null))) {
			F.line = 124;
			kxi_205324[0].byId[n_206171.id] = n_206171;
			}
			
			L1: do {
				F.line = 172;
				var k_206839 = null;
				L2: do {
					F.line = 282;
					var i_276859 = 0;
					F.line = 3678;
					var colontmp__276861 = 0;
					F.line = 282;
					colontmp__276861 = (n_206171.kids != null ? n_206171.kids.length : 0);
					F.line = 3679;
					var i_276863 = 0;
					L3: do {
						F.line = 3680;
							L4: while (true) {
							if (!(i_276863 < colontmp__276861)) break L4;
								F.line = 282;
								i_276859 = i_276863;
								F.line = 172;
								k_206839 = n_206171.kids[chckIndx(i_276859, 0, n_206171.kids.length+0-1)-0];
								F.line = 173;
								result_206173.appendChild(vnode_to_dom_206169(k_206839, kxi_206172));
								F.line = 3682;
								i_276863 = addInt(i_276863, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_206171.text == null))) {
			F.line = 176;
			result_206173.value = n_206171.text;
			}
			
		}
		}}}}
		if (!((n_206171.id == null))) {
		F.line = 178;
		result_206173.id = n_206171.id;
		}
		
		if (!((n_206171.class == null))) {
		F.line = 180;
		result_206173.className = n_206171.class;
		}
		
		L5: do {
			F.line = 183;
			var k_206840 = null;
			F.line = 183;
			var v_206841 = null;
			L6: do {
				F.line = 285;
				var i_276876 = 0;
				F.line = 2121;
				var colontmp__276878 = 0;
				F.line = 285;
				colontmp__276878 = subInt((n_206171.attrs != null ? n_206171.attrs.length : 0), 2);
				F.line = 2127;
				var res_276880 = 0;
				L7: do {
					F.line = 2128;
						L8: while (true) {
						if (!(res_276880 <= colontmp__276878)) break L8;
							F.line = 285;
							i_276876 = res_276880;
							F.line = 183;
							k_206840 = n_206171.attrs[chckIndx(i_276876, 0, n_206171.attrs.length+0-1)-0];
							F.line = 286;
							v_206841 = n_206171.attrs[chckIndx(addInt(i_276876, 1), 0, n_206171.attrs.length+0-1)-0];
							if (!((v_206841 == null))) {
							F.line = 185;
							result_206173.setAttribute(k_206840, v_206841);
							}
							
							F.line = 2130;
							res_276880 = addInt(res_276880, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		F.line = 186;
		apply_events_206076(n_206171);
			if (!!((kxi_206172 == null))) Tmp10 = false; else {				Tmp10 = (n_206171 == kxi_206172.toFocusV);			}			if (!Tmp10) Tmp9 = false; else {				Tmp9 = (kxi_206172.toFocus === null);			}		if (Tmp9) {
		F.line = 188;
		kxi_206172.toFocus = result_206173;
		}
		
		if (!((n_206171.style === null))) {
		F.line = 189;
		apply_style_78027(result_206173, n_206171.style);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_206173;

}

function replace_by_id_207009(id_207011, new_tree_207012) {
	var F={procname:"karax.replaceById",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 213;
		var x_207013 = document.getElementById(id_207011);
		F.line = 214;
		x_207013.parentNode.replaceChild(new_tree_207012, x_207013);
		F.line = 215;
		new_tree_207012.id = id_207011;
	framePtr = F.prev;

	
}

function len_188694(x_188696) {
	var result_188697 = 0;

	var F={procname:"vdom.len",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 246;
		result_188697 = (x_188696.kids != null ? x_188696.kids.length : 0);
	framePtr = F.prev;

	return result_188697;

}

function HEX5BHEX5D_188718(x_188720, idx_188721) {
	var result_188722 = null;

	var F={procname:"vdom.[]",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 247;
		result_188722 = x_188720.kids[chckIndx(idx_188721, 0, x_188720.kids.length+0-1)-0];
	framePtr = F.prev;

	return result_188722;

}

function same_206892(n_206894, e_206895, nesting_206896) {
			var Tmp1;
			var Tmp2;

	var result_206898 = false;

	var F={procname:"karax.same",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (kxi_205324[0].orphans.hasOwnProperty(n_206894.id)) {
		F.line = 192;
		result_206898 = true;
		break BeforeRet;
		}
		
		if ((n_206894.kind == 5)) {
		F.line = 194;
		result_206898 = same_206892(n_206894.expanded, e_206895, addInt(nesting_206896, 1));
		}
		else {
		if ((n_206894.kind == 6)) {
		F.line = 196;
		result_206898 = true;
		}
		else {
			if ((n_206894.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_206894.kind == 4);			}		if (Tmp1) {
		F.line = 199;
		result_206898 = true;
		}
		else {
		if ((to_tag_187699[chckIndx(n_206894.kind, 0, to_tag_187699.length+0-1)-0] == e_206895.nodeName)) {
		F.line = 201;
		result_206898 = true;
		if (!((n_206894.kind == 0))) {
			if (!!((e_206895.childNodes.length == len_188694(n_206894)))) Tmp2 = false; else {				Tmp2 = !((n_206894.kind == 109));			}		if (Tmp2) {
		F.line = 205;
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_188694(n_206894))+""), makeNimstrLit(" real "), cstrToNimstr((e_206895.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_187699[chckIndx(n_206894.kind, 0, to_tag_187699.length+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_206896)+""));
		F.line = 206;
		result_206898 = false;
		break BeforeRet;
		}
		
		L3: do {
			F.line = 207;
			var i_206991 = 0;
			F.line = 3678;
			var colontmp__276908 = 0;
			F.line = 207;
			colontmp__276908 = len_188694(n_206894);
			F.line = 3679;
			var i_276910 = 0;
			L4: do {
				F.line = 3680;
					L5: while (true) {
					if (!(i_276910 < colontmp__276908)) break L5;
						F.line = 207;
						i_206991 = i_276910;
						if (!(same_206892(HEX5BHEX5D_188718(n_206894, i_206991), e_206895.childNodes[i_206991], addInt(nesting_206896, 1)))) {
						F.line = 208;
						result_206898 = false;
						break BeforeRet;
						}
						
						F.line = 3682;
						i_276910 = addInt(i_276910, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
			F.line = 210;
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_187699[chckIndx(n_206894.kind, 0, to_tag_187699.length+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_206895.nodeName));
		}
		}}}
	} while (false);
	framePtr = F.prev;

	return result_206898;

}

function eq_76814(a_76816, b_76817) {
	var result_76818 = false;

	var F={procname:"vstyles.eq",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vstyles.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((a_76816 === null)) {
		if ((b_76817 === null)) {
		F.line = 229;
		result_76818 = true;
		break BeforeRet;
		}
		else {
			F.line = 230;
			result_76818 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_76817 === null)) {
		F.line = 231;
		result_76818 = false;
		break BeforeRet;
		}
		}
		if (!((a_76816.length == b_76817.length))) {
		F.line = 232;
		result_76818 = false;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 233;
			var i_76942 = 0;
			F.line = 3678;
			var colontmp__276952 = 0;
			F.line = 233;
			colontmp__276952 = a_76816.length;
			F.line = 3679;
			var i_276954 = 0;
			L2: do {
				F.line = 3680;
					L3: while (true) {
					if (!(i_276954 < colontmp__276952)) break L3;
						F.line = 233;
						i_76942 = i_276954;
						if (!((a_76816[i_76942] == b_76817[i_76942]))) {
						F.line = 234;
						result_76818 = false;
						break BeforeRet;
						}
						
						F.line = 3682;
						i_276954 = addInt(i_276954, 1);
					}
			} while(false);
		} while(false);
		F.line = 235;
		result_76818 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_76818;

}

function same_attrs_190490(a_190492, b_190493) {
	var result_190494 = false;

	var F={procname:"vdom.sameAttrs",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((a_190492.attrs != null ? a_190492.attrs.length : 0) == (b_190493.attrs != null ? b_190493.attrs.length : 0))) {
		F.line = 290;
		result_190494 = true;
		L1: do {
			F.line = 291;
			var i_190525 = 0;
			F.line = 3678;
			var colontmp__276958 = 0;
			F.line = 291;
			colontmp__276958 = (a_190492.attrs != null ? a_190492.attrs.length : 0);
			F.line = 3679;
			var i_276960 = 0;
			L2: do {
				F.line = 3680;
					L3: while (true) {
					if (!(i_276960 < colontmp__276958)) break L3;
						F.line = 291;
						i_190525 = i_276960;
						if (!((a_190492.attrs[chckIndx(i_190525, 0, a_190492.attrs.length+0-1)-0] == b_190493.attrs[chckIndx(i_190525, 0, b_190493.attrs.length+0-1)-0]))) {
						F.line = 292;
						result_190494 = false;
						break BeforeRet;
						}
						
						F.line = 3682;
						i_276960 = addInt(i_276960, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_190494;

}

function eq_207214(a_207216, b_207217) {
			var Tmp4;
			var Tmp5;

	var result_207218 = 0;

	var F={procname:"karax.eq",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((a_207216.kind == b_207217.kind))) {
		F.line = 237;
		result_207218 = 1;
		break BeforeRet;
		}
		
		if (!((a_207216.id == b_207217.id))) {
		F.line = 240;
		result_207218 = 1;
		break BeforeRet;
		}
		
		F.line = 241;
		result_207218 = 3;
		if (!((a_207216.index == b_207217.index))) {
		F.line = 244;
		result_207218 = 1;
		break BeforeRet;
		}
		
		if ((a_207216.kind == 0)) {
		if (!((a_207216.text == b_207217.text))) {
		F.line = 248;
		result_207218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((a_207216.kind == 3)) {
		if (!((a_207216.text == b_207217.text))) {
		F.line = 250;
		result_207218 = 1;
		break BeforeRet;
		}
		
		if (!((len_188694(a_207216) == len_188694(b_207217)))) {
		F.line = 251;
		result_207218 = 1;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 252;
			var i_208019 = 0;
			F.line = 3678;
			var colontmp__276946 = 0;
			F.line = 252;
			colontmp__276946 = len_188694(a_207216);
			F.line = 3679;
			var i_276948 = 0;
			L2: do {
				F.line = 3680;
					L3: while (true) {
					if (!(i_276948 < colontmp__276946)) break L3;
						F.line = 252;
						i_208019 = i_276948;
						if ((eq_207214(HEX5BHEX5D_188718(a_207216, i_208019), HEX5BHEX5D_188718(b_207217, i_208019)) == 1)) {
						F.line = 253;
						result_207218 = 1;
						break BeforeRet;
						}
						
						F.line = 3682;
						i_276948 = addInt(i_276948, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_207216.kind == 4)) {
		F.line = 255;
		result_207218 = 3;
		break BeforeRet;
		}
		else {
		if ((a_207216.kind == 6)) {
		if (!((a_207216.text == b_207217.text))) {
		F.line = 258;
		result_207218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_207217.kind == 5)) {
		if (!((a_207216.text == b_207217.text))) {
		F.line = 263;
		result_207218 = 1;
		break BeforeRet;
		}
		
		if (!((a_207216.key == b_207217.key))) {
		F.line = 269;
		result_207218 = 1;
		break BeforeRet;
		}
		
		F.line = 270;
		result_207218 = 0;
		break BeforeRet;
		}
		}}}}
			if (!((a_207216.class == b_207217.class))) Tmp5 = true; else {				Tmp5 = !(eq_76814(a_207216.style, b_207217.style));			}			if (Tmp5) Tmp4 = true; else {				Tmp4 = !(same_attrs_190490(a_207216, b_207217));			}		if (Tmp4) {
		F.line = 276;
		result_207218 = 2;
		break BeforeRet;
		}
		
		F.line = 278;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_207218;

}

function update_styles_208614(new_node_208616, old_node_208617) {
	var F={procname:"karax.updateStyles",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		if (!((old_node_208617.dom == null))) {
		if (!((new_node_208616.style == null))) {
		F.line = 283;
		apply_style_78027(old_node_208617.dom, new_node_208616.style);
		}
		else {
			F.line = 284;
			old_node_208617.dom.style = {m_type: NTI63276, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		F.line = 285;
		old_node_208617.dom.className = new_node_208616.class;
		}
		
		F.line = 286;
		old_node_208617.style = new_node_208616.style;
		F.line = 287;
		old_node_208617.class = new_node_208616.class;
	framePtr = F.prev;

	
}

function take_over_attr_188655(new_node_188657, old_node_188658) {
	var F={procname:"vdom.takeOverAttr",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 230;
		old_node_188658.attrs = new_node_188657.attrs;
	framePtr = F.prev;

	
}

function update_attributes_208653(new_node_208655, old_node_208656) {
	var F={procname:"karax.updateAttributes",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		if (!((old_node_208656.dom == null))) {
		L1: do {
			F.line = 292;
			var k_208668 = null;
			F.line = 292;
			var __208669 = null;
			L2: do {
				F.line = 285;
				var i_276967 = 0;
				F.line = 2121;
				var colontmp__276969 = 0;
				F.line = 285;
				colontmp__276969 = subInt((old_node_208656.attrs != null ? old_node_208656.attrs.length : 0), 2);
				F.line = 2127;
				var res_276971 = 0;
				L3: do {
					F.line = 2128;
						L4: while (true) {
						if (!(res_276971 <= colontmp__276969)) break L4;
							F.line = 285;
							i_276967 = res_276971;
							F.line = 292;
							k_208668 = old_node_208656.attrs[chckIndx(i_276967, 0, old_node_208656.attrs.length+0-1)-0];
							F.line = 286;
							__208669 = old_node_208656.attrs[chckIndx(addInt(i_276967, 1), 0, old_node_208656.attrs.length+0-1)-0];
							F.line = 293;
							old_node_208656.dom.removeAttribute(k_208668);
							F.line = 2130;
							res_276971 = addInt(res_276971, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			F.line = 294;
			var k_208670 = null;
			F.line = 294;
			var v_208671 = null;
			L6: do {
				F.line = 285;
				var i_276978 = 0;
				F.line = 2121;
				var colontmp__276980 = 0;
				F.line = 285;
				colontmp__276980 = subInt((new_node_208655.attrs != null ? new_node_208655.attrs.length : 0), 2);
				F.line = 2127;
				var res_276982 = 0;
				L7: do {
					F.line = 2128;
						L8: while (true) {
						if (!(res_276982 <= colontmp__276980)) break L8;
							F.line = 285;
							i_276978 = res_276982;
							F.line = 294;
							k_208670 = new_node_208655.attrs[chckIndx(i_276978, 0, new_node_208655.attrs.length+0-1)-0];
							F.line = 286;
							v_208671 = new_node_208655.attrs[chckIndx(addInt(i_276978, 1), 0, new_node_208655.attrs.length+0-1)-0];
							if (!((v_208671 == null))) {
							F.line = 296;
							old_node_208656.dom.setAttribute(k_208670, v_208671);
							}
							
							F.line = 2130;
							res_276982 = addInt(res_276982, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		F.line = 297;
		take_over_attr_188655(new_node_208655, old_node_208656);
	framePtr = F.prev;

	
}

function merge_events_208685(new_node_208687, old_node_208688, kxi_208689) {
						var Tmp4;

	var F={procname:"karax.mergeEvents",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 300;
		var d_208690 = old_node_208688.dom;
		L1: do {
			F.line = 301;
			var i_208707 = 0;
			F.line = 3678;
			var colontmp__276987 = 0;
			F.line = 301;
			colontmp__276987 = (old_node_208688.events != null ? old_node_208688.events.length : 0);
			F.line = 3679;
			var i_276989 = 0;
			L2: do {
				F.line = 3680;
					L3: while (true) {
					if (!(i_276989 < colontmp__276987)) break L3;
						F.line = 301;
						i_208707 = i_276989;
						F.line = 302;
						var k_208708 = old_node_208688.events[chckIndx(i_208707, 0, old_node_208688.events.length+0-1)-0]["Field0"];
						F.line = 303;
						F.line = 303;
						switch (k_208708) {
						case 30:
						case 29:
							Tmp4 = "keyup";
							break;
						default: 
							Tmp4 = to_event_name_187705[chckIndx(k_208708, 0, to_event_name_187705.length+0-1)-0];
							break;
						}
						var name_208711 = Tmp4;
						F.line = 306;
						d_208690.removeEventListener(name_208711, old_node_208688.events[chckIndx(i_208707, 0, old_node_208688.events.length+0-1)-0]["Field2"]);
						F.line = 3682;
						i_276989 = addInt(i_276989, 1);
					}
			} while(false);
		} while(false);
		F.line = 307;
		old_node_208688.events = new_node_208687.events;
		F.line = 308;
		apply_events_206076(old_node_208688);
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_188736(x_188738, idx_188739, y_188740) {
	var F={procname:"vdom.[]=",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 248;
		x_188738.kids[chckIndx(idx_188739, 0, x_188738.kids.length+0-1)-0] = y_188740;
	framePtr = F.prev;

	
}

function add_patch_v_208861(kxi_208863, parent_208864, pos_208865, new_child_208866) {
	var F={procname:"karax.addPatchV",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 337;
		var l_208867 = kxi_208863.patchLenV;
		if (((kxi_208863.patchesV != null ? kxi_208863.patchesV.length : 0) <= l_208867)) {
		F.line = 340;
		if (kxi_208863.patchesV != null) { kxi_208863.patchesV.push({parent: parent_208864, newChild: new_child_208866, pos: pos_208865}); } else { kxi_208863.patchesV = [{parent: parent_208864, newChild: new_child_208866, pos: pos_208865}]; };
		}
		else {
			F.line = 342;
			kxi_208863.patchesV[chckIndx(l_208867, 0, kxi_208863.patchesV.length+0-1)-0].parent = parent_208864;
			F.line = 343;
			kxi_208863.patchesV[chckIndx(l_208867, 0, kxi_208863.patchesV.length+0-1)-0].newChild = new_child_208866;
			F.line = 344;
			kxi_208863.patchesV[chckIndx(l_208867, 0, kxi_208863.patchesV.length+0-1)-0].pos = pos_208865;
		}
		
		F.line = 345;
		kxi_208863.patchLenV = addInt(kxi_208863.patchLenV, 1);
	framePtr = F.prev;

	
}

function add_patch_208814(kxi_208816, ka_208817, parenta_208818, currenta_208819, na_208820) {
	var F={procname:"karax.addPatch",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 325;
		var l_208821 = kxi_208816.patchLen;
		if (((kxi_208816.patches != null ? kxi_208816.patches.length : 0) <= l_208821)) {
		F.line = 328;
		if (kxi_208816.patches != null) { kxi_208816.patches.push({k: ka_208817, parent: parenta_208818, current: currenta_208819, n: na_208820}); } else { kxi_208816.patches = [{k: ka_208817, parent: parenta_208818, current: currenta_208819, n: na_208820}]; };
		}
		else {
			F.line = 330;
			kxi_208816.patches[chckIndx(l_208821, 0, kxi_208816.patches.length+0-1)-0].k = ka_208817;
			F.line = 331;
			kxi_208816.patches[chckIndx(l_208821, 0, kxi_208816.patches.length+0-1)-0].parent = parenta_208818;
			F.line = 332;
			kxi_208816.patches[chckIndx(l_208821, 0, kxi_208816.patches.length+0-1)-0].current = currenta_208819;
			F.line = 333;
			kxi_208816.patches[chckIndx(l_208821, 0, kxi_208816.patches.length+0-1)-0].n = na_208820;
		}
		
		F.line = 334;
		kxi_208816.patchLen = addInt(kxi_208816.patchLen, 1);
	framePtr = F.prev;

	
}

function diff_209015(new_node_209017, old_node_209018, parent_209019, current_209020, kxi_209021) {
				var Tmp1;
			var Tmp2;
			var Tmp3;
						var Tmp6;
						var Tmp9;
						var Tmp10;

	var result_209022 = 0;

	var F={procname:"karax.diff",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 389;
		result_209022 = eq_207214(new_node_209017, old_node_209018);
		F.line = 390;
		switch (result_209022) {
		case 0:
			F.line = 392;
			if (kxi_209021.components != null) { kxi_209021.components.push({oldNode: old_node_209018, newNode: new_node_209017, parent: parent_209019, current: current_209020}); } else { kxi_209021.components = [{oldNode: old_node_209018, newNode: new_node_209017, parent: parent_209019, current: current_209020}]; };
			break;
		case 3:
		case 2:
			F.line = 397;
			new_node_209017.dom = old_node_209018.dom;
			if ((result_209022 == 2)) {
			F.line = 399;
			update_styles_208614(new_node_209017, old_node_209018);
			F.line = 400;
			update_attributes_208653(new_node_209017, old_node_209018);
			if ((old_node_209018.kind == 0)) {
			F.line = 402;
			old_node_209018.text = new_node_209017.text;
			F.line = 403;
			old_node_209018.dom.nodeValue = new_node_209017.text;
			}
			
			}
			
				if (!(((new_node_209017.events != null ? new_node_209017.events.length : 0) == 0))) Tmp1 = true; else {					Tmp1 = !(((old_node_209018.events != null ? old_node_209018.events.length : 0) == 0));				}			if (Tmp1) {
			F.line = 406;
			merge_events_208685(new_node_209017, old_node_209018, kxi_209021);
			}
			
			F.line = 413;
			var new_length_209401 = len_188694(new_node_209017);
			F.line = 414;
			var old_length_209402 = len_188694(old_node_209018);
			if (((new_length_209401 == 0) && (old_length_209402 == 0))) {
			F.line = 415;
			break BeforeRet;
			}
			
			F.line = 416;
			var min_length_209403 = nimMin(new_length_209401, old_length_209402);
			if (!((old_node_209018.kind == new_node_209017.kind))) {
			F.line = 418;
			failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(418, 12) `oldNode.kind == newNode.kind` "));
			}
			
			F.line = 419;
			var common_prefix_209602 = 0;
			F.line = 420;
			if ((old_node_209018.kind == 5)) Tmp3 = true; else {				Tmp3 = (old_node_209018.kind == 3);			}			if (Tmp3) Tmp2 = true; else {				Tmp2 = (old_node_209018.kind == 4);			}			var is_special_209630 = Tmp2;
			L4: do {
				F.line = 449;
					L5: while (true) {
					if (!(common_prefix_209602 < min_length_209403)) break L5;
						F.line = 425;
						var old_len_209656 = kxi_209021.patchLen;
						F.line = 426;
						var old_len_v_209658 = kxi_209021.patchLenV;
						if (!((common_prefix_209602 < len_188694(new_node_209017)))) {
						F.line = 427;
						failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(427, 14) `commonPrefix <\x0A    newNode.len` "));
						}
						
						if (!((common_prefix_209602 < len_188694(old_node_209018)))) {
						F.line = 428;
						failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(428, 14) `commonPrefix <\x0A    oldNode.len` "));
						}
						
						F.line = 429;
						if (is_special_209630) {
						Tmp6 = diff_209015(HEX5BHEX5D_188718(new_node_209017, common_prefix_209602), HEX5BHEX5D_188718(old_node_209018, common_prefix_209602), parent_209019, current_209020, kxi_209021);
						}
						else {
						Tmp6 = diff_209015(HEX5BHEX5D_188718(new_node_209017, common_prefix_209602), HEX5BHEX5D_188718(old_node_209018, common_prefix_209602), current_209020, current_209020.childNodes[chckIndx(common_prefix_209602, 0, current_209020.childNodes.length+0-1)-0], kxi_209021);
						}
						
						var r_209660 = Tmp6;
						F.line = 450;
						switch (r_209660) {
						case 3:
						case 0:
						case 2:
							F.line = 435;
							HEX5BHEX5DHEX3D_188736(new_node_209017, common_prefix_209602, HEX5BHEX5D_188718(old_node_209018, common_prefix_209602));
							F.line = 451;
							common_prefix_209602 = addInt(common_prefix_209602, 1);
							break;
						case 4:
							F.line = 438;
							add_patch_v_208861(kxi_209021, old_node_209018, common_prefix_209602, HEX5BHEX5D_188718(new_node_209017, common_prefix_209602));
							F.line = 451;
							common_prefix_209602 = addInt(common_prefix_209602, 1);
							F.line = 441;
							result_209022 = 4;
							break;
						case 1:
							F.line = 444;
							kxi_209021.patchLen = old_len_209656;
							F.line = 445;
							kxi_209021.patchLenV = old_len_v_209658;
							if (!((result_209022 == 1))) {
							F.line = 446;
							result_209022 = r_209660;
							}
							
							F.line = 447;
							break L4;
							break;
						}
					}
			} while(false);
			F.line = 454;
			var old_pos_210031 = subInt(old_length_209402, 1);
			F.line = 455;
			var new_pos_210032 = subInt(new_length_209401, 1);
			L7: do {
				F.line = 456;
					L8: while (true) {
						if (!(common_prefix_209602 <= old_pos_210031)) Tmp9 = false; else {							Tmp9 = (common_prefix_209602 <= new_pos_210032);						}					if (!Tmp9) break L8;
						F.line = 425;
						var old_len_210034 = kxi_209021.patchLen;
						F.line = 426;
						var old_len_v_210036 = kxi_209021.patchLenV;
						if (!((new_pos_210032 < len_188694(new_node_209017)))) {
						F.line = 427;
						failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(427, 14) `newPos <\x0A    newNode.len` "));
						}
						
						if (!((old_pos_210031 < len_188694(old_node_209018)))) {
						F.line = 428;
						failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(428, 14) `oldPos <\x0A    oldNode.len` "));
						}
						
						F.line = 429;
						if (is_special_209630) {
						Tmp10 = diff_209015(HEX5BHEX5D_188718(new_node_209017, new_pos_210032), HEX5BHEX5D_188718(old_node_209018, old_pos_210031), parent_209019, current_209020, kxi_209021);
						}
						else {
						Tmp10 = diff_209015(HEX5BHEX5D_188718(new_node_209017, new_pos_210032), HEX5BHEX5D_188718(old_node_209018, old_pos_210031), current_209020, current_209020.childNodes[chckIndx(old_pos_210031, 0, current_209020.childNodes.length+0-1)-0], kxi_209021);
						}
						
						var r_210038 = Tmp10;
						F.line = 457;
						switch (r_210038) {
						case 3:
						case 0:
						case 2:
							F.line = 435;
							HEX5BHEX5DHEX3D_188736(new_node_209017, new_pos_210032, HEX5BHEX5D_188718(old_node_209018, old_pos_210031));
							F.line = 458;
							old_pos_210031 = subInt(old_pos_210031, 1);
							F.line = 459;
							new_pos_210032 = subInt(new_pos_210032, 1);
							break;
						case 4:
							F.line = 438;
							add_patch_v_208861(kxi_209021, old_node_209018, old_pos_210031, HEX5BHEX5D_188718(new_node_209017, new_pos_210032));
							F.line = 458;
							old_pos_210031 = subInt(old_pos_210031, 1);
							F.line = 459;
							new_pos_210032 = subInt(new_pos_210032, 1);
							F.line = 441;
							result_209022 = 4;
							break;
						case 1:
							F.line = 444;
							kxi_209021.patchLen = old_len_210034;
							F.line = 445;
							kxi_209021.patchLenV = old_len_v_210036;
							if (!((result_209022 == 1))) {
							F.line = 446;
							result_209022 = r_210038;
							}
							
							F.line = 447;
							break L7;
							break;
						}
					}
			} while(false);
			F.line = 461;
			var pos_210449 = addInt(nimMin(old_pos_210031, new_pos_210032), 1);
			L11: do {
				F.line = 463;
				var i_210458 = 0;
				F.line = 2137;
				var colontmp__276917 = 0;
				F.line = 463;
				colontmp__276917 = subInt(pos_210449, 1);
				F.line = 2140;
				var res_276919 = common_prefix_209602;
				L12: do {
					F.line = 2141;
						L13: while (true) {
						if (!(res_276919 <= colontmp__276917)) break L13;
							F.line = 463;
							i_210458 = res_276919;
							F.line = 464;
							var r_210459 = diff_209015(HEX5BHEX5D_188718(new_node_209017, i_210458), HEX5BHEX5D_188718(old_node_209018, i_210458), current_209020, current_209020.childNodes[chckIndx(i_210458, 0, current_209020.childNodes.length+0-1)-0], kxi_209021);
							if ((r_210459 == 4)) {
							F.line = 467;
							add_patch_v_208861(kxi_209021, old_node_209018, i_210458, HEX5BHEX5D_188718(new_node_209017, i_210458));
							}
							else {
							if (!((r_210459 == 1))) {
							F.line = 469;
							HEX5BHEX5DHEX3D_188736(new_node_209017, i_210458, HEX5BHEX5D_188718(old_node_209018, i_210458));
							}
							}
							F.line = 2143;
							res_276919 = addInt(res_276919, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_210031, 1) == old_length_209402)) {
			L14: do {
				F.line = 474;
				var i_210484 = 0;
				F.line = 2140;
				var res_276926 = pos_210449;
				L15: do {
					F.line = 2141;
						L16: while (true) {
						if (!(res_276926 <= new_pos_210032)) break L16;
							F.line = 474;
							i_210484 = res_276926;
							F.line = 475;
							add_patch_208814(kxi_209021, 2, current_209020, null, HEX5BHEX5D_188718(new_node_209017, i_210484));
							F.line = 476;
							result_209022 = 4;
							F.line = 2143;
							res_276926 = addInt(res_276926, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				F.line = 478;
				var before_210485 = current_209020.childNodes[chckIndx(addInt(old_pos_210031, 1), 0, current_209020.childNodes.length+0-1)-0];
				L17: do {
					F.line = 479;
					var i_210494 = 0;
					F.line = 2140;
					var res_276933 = pos_210449;
					L18: do {
						F.line = 2141;
							L19: while (true) {
							if (!(res_276933 <= new_pos_210032)) break L19;
								F.line = 479;
								i_210494 = res_276933;
								F.line = 480;
								add_patch_208814(kxi_209021, 3, current_209020, before_210485, HEX5BHEX5D_188718(new_node_209017, i_210494));
								F.line = 481;
								result_209022 = 4;
								F.line = 2143;
								res_276933 = addInt(res_276933, 1);
							}
					} while(false);
				} while(false);
			}
			
			L20: do {
				F.line = 483;
				var i_210503 = 0;
				F.line = 2140;
				var res_276940 = pos_210449;
				L21: do {
					F.line = 2141;
						L22: while (true) {
						if (!(res_276940 <= old_pos_210031)) break L22;
							F.line = 483;
							i_210503 = res_276940;
							F.line = 484;
							add_patch_208814(kxi_205324[0], 4, null, null, HEX5BHEX5D_188718(old_node_209018, i_210503));
							F.line = 486;
							add_patch_208814(kxi_209021, 1, current_209020, current_209020.childNodes[chckIndx(i_210503, 0, current_209020.childNodes.length+0-1)-0], null);
							F.line = 487;
							result_209022 = 4;
							F.line = 2143;
							res_276940 = addInt(res_276940, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			F.line = 489;
			add_patch_208814(kxi_205324[0], 4, null, null, old_node_209018);
			F.line = 490;
			add_patch_208814(kxi_209021, 0, parent_209019, current_209020, new_node_209017);
			break;
		case 4:
			if (true) {
			F.line = 491;
			failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(491, 26) `false` eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_209022;

}

function apply_components_210814(kxi_210816) {
						var Tmp3;

	var F={procname:"karax.applyComponents",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 499;
		var i_210818 = 0;
		L1: do {
			F.line = 502;
				L2: while (true) {
				if (!(i_210818 < (kxi_210816.components != null ? kxi_210816.components.length : 0))) break L2;
					F.line = 503;
					var x_210826 = kxi_210816.components[chckIndx(i_210818, 0, kxi_210816.components.length+0-1)-0].oldNode;
					F.line = 504;
					var new_node_210827 = kxi_210816.components[chckIndx(i_210818, 0, kxi_210816.components.length+0-1)-0].newNode;
						if (!!((x_210826.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_210826.changedImpl(x_210826, new_node_210827);						}					if (Tmp3) {
					F.line = 510;
					var current_211201 = kxi_210816.components[chckIndx(i_210818, 0, kxi_210816.components.length+0-1)-0].current;
					F.line = 511;
					var parent_211202 = kxi_210816.components[chckIndx(i_210818, 0, kxi_210816.components.length+0-1)-0].parent;
					F.line = 512;
					x_210826.updatedImpl(x_210826, new_node_210827);
					F.line = 513;
					var old_expanded_211203 = x_210826.expanded;
					F.line = 514;
					x_210826.expanded = x_210826.renderImpl(x_210826);
					F.line = 517;
					x_210826.renderedVersion = x_210826.version;
					if ((old_expanded_211203 == null)) {
					F.line = 519;
					add_patch_208814(kxi_205324[0], 4, null, null, x_210826);
					F.line = 520;
					add_patch_208814(kxi_210816, 0, parent_211202, current_211201, x_210826.expanded);
					}
					else {
						F.line = 524;
						var res_211601 = diff_209015(x_210826.expanded, old_expanded_211203, parent_211202, current_211201, kxi_210816);
						if ((res_211601 == 4)) {
						}
						else {
						if (!((res_211601 == 1))) {
						F.line = 532;
						x_210826.expanded = old_expanded_211203;
						if (!(!((old_expanded_211203.dom == null)))) {
						F.line = 533;
						failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(533, 18) `oldExpanded.dom != nil` old expanded.dom is nil"));
						}
						
						}
						else {
							if (!(!((x_210826.expanded.dom == null)))) {
							F.line = 537;
							failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(537, 18) `x.expanded.dom != nil` expanded.dom is nil"));
							}
							
						}
						}
					}
					
					}
					
					F.line = 538;
					i_210818 = addInt(i_210818, 1);
				}
		} while(false);
		F.line = 539;
		if (kxi_210816.components === null) kxi_210816.components = [];
               if (kxi_210816.components.length < 0) { for (var i=kxi_210816.components.length;i<0;++i) kxi_210816.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_210816.components.length = 0; };
	framePtr = F.prev;

	
}

function apply_patch_208907(kxi_208909) {
	var F={procname:"karax.applyPatch",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 348;
			var i_208919 = 0;
			F.line = 3678;
			var colontmp__276996 = 0;
			F.line = 348;
			colontmp__276996 = kxi_208909.patchLen;
			F.line = 3679;
			var i_276998 = 0;
			L2: do {
				F.line = 3680;
					L3: while (true) {
					if (!(i_276998 < colontmp__276996)) break L3;
						F.line = 348;
						i_208919 = i_276998;
						F.line = 349;
						var p_208920 = nimCopy(null, kxi_208909.patches[chckIndx(i_208919, 0, kxi_208909.patches.length+0-1)-0], NTI205209);
						F.line = 350;
						switch (p_208920.k) {
						case 0:
							F.line = 352;
							var nn_208921 = vnode_to_dom_206169(p_208920.n, kxi_208909);
							if ((p_208920.parent == null)) {
							F.line = 354;
							replace_by_id_207009(kxi_208909.rootId, nn_208921);
							}
							else {
								F.line = 356;
							p_208920.parent.replaceChild(nn_208921, p_208920.current);
							}
							
							break;
						case 1:
							F.line = 358;
							p_208920.parent.removeChild(p_208920.current);
							break;
						case 2:
							F.line = 360;
							var nn_208933 = vnode_to_dom_206169(p_208920.n, kxi_208909);
							F.line = 361;
							p_208920.parent.appendChild(nn_208933);
							break;
						case 3:
							F.line = 363;
							var nn_208934 = vnode_to_dom_206169(p_208920.n, kxi_208909);
							F.line = 364;
							p_208920.parent.insertBefore(nn_208934, p_208920.current);
							break;
						case 4:
							F.line = 366;
							var n_208935 = p_208920.n;
							if (!((n_208935.id == null))) {
							F.line = 367;
							delete kxi_208909.byId[n_208935.id];
							}
							
							if ((n_208935.kind == 5)) {
							F.line = 369;
							var x_208959 = n_208935;
							if (!((x_208959.onDetachImpl == null))) {
							F.line = 370;
							x_208959.onDetachImpl(x_208959);
							}
							
							}
							
							if (!(kxi_208909.surpressRedraws)) {
							F.line = 372;
							n_208935.dom = null;
							}
							
							break;
						}
						F.line = 3682;
						i_276998 = addInt(i_276998, 1);
					}
			} while(false);
		} while(false);
		F.line = 373;
		kxi_208909.patchLen = 0;
		L4: do {
			F.line = 374;
			var i_208977 = 0;
			F.line = 3678;
			var colontmp__277002 = 0;
			F.line = 374;
			colontmp__277002 = kxi_208909.patchLenV;
			F.line = 3679;
			var i_277004 = 0;
			L5: do {
				F.line = 3680;
					L6: while (true) {
					if (!(i_277004 < colontmp__277002)) break L6;
						F.line = 374;
						i_208977 = i_277004;
						F.line = 375;
						var p_208978 = nimCopy(null, kxi_208909.patchesV[chckIndx(i_208977, 0, kxi_208909.patchesV.length+0-1)-0], NTI205211);
						F.line = 376;
						HEX5BHEX5DHEX3D_188736(p_208978.parent, p_208978.pos, p_208978.newChild);
						if (!(!((p_208978.newChild.dom == null)))) {
						F.line = 377;
						failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(377, 12) `p.newChild.dom != nil` "));
						}
						
						F.line = 3682;
						i_277004 = addInt(i_277004, 1);
					}
			} while(false);
		} while(false);
		F.line = 378;
		kxi_208909.patchLenV = 0;
	framePtr = F.prev;

	
}

function dodraw_213631(kxi_213633) {
	var F={procname:"karax.dodraw",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((kxi_213633.renderer === null)) {
		F.line = 587;
		break BeforeRet;
		}
		
		F.line = 588;
		var rdata_213640 = {hashPart: window.location.hash};
		F.line = 589;
		var newtree_213641 = kxi_213633.renderer(rdata_213640);
		F.line = 590;
		kxi_213633.runCount = addInt(kxi_213633.runCount, 1);
		F.line = 591;
		newtree_213641.id = kxi_213633.rootId;
		F.line = 592;
		kxi_213633.toFocus = null;
		if ((kxi_213633.currentTree == null)) {
		F.line = 594;
		var asdom_213662 = vnode_to_dom_206169(newtree_213641, kxi_213633);
		F.line = 595;
		replace_by_id_207009(kxi_213633.rootId, asdom_213662);
		}
		else {
			if (!(same_206892(kxi_213633.currentTree, document.getElementById(kxi_213633.rootId), 0))) {
			F.line = 597;
			failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(597, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
			}
			
			F.line = 598;
			var olddom_213801 = document.getElementById(kxi_213633.rootId);
			F.line = 599;
			diff_209015(newtree_213641, kxi_213633.currentTree, null, olddom_213801, kxi_213633);
		}
		
		F.line = 604;
		apply_components_210814(kxi_213633);
		F.line = 609;
		apply_patch_208907(kxi_213633);
		F.line = 610;
		kxi_213633.currentTree = newtree_213641;
		if (!(same_206892(kxi_213633.currentTree, document.getElementById(kxi_213633.rootId), 0))) {
		F.line = 611;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.nimble/pkgs/karax-#head/karax/karax.nim(611, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
		}
		
		if (!((kxi_213633.postRenderCallback === null))) {
		F.line = 614;
		kxi_213633.postRenderCallback(rdata_213640);
		}
		
		if (!((kxi_213633.toFocus == null))) {
		F.line = 618;
		kxi_213633.toFocus.focus();
		}
		
		F.line = 619;
		kxi_213633.renderId = 0;
	} while (false);
	framePtr = F.prev;

	
}

function init_215046(ev_215048) {

		function HEX3Aanonymous_215049() {
			var F={procname:"init.:anonymous",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 644;
				dodraw_213631(kxi_205324[0]);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.init",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 644;
		kxi_205324[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_215049);
	framePtr = F.prev;

	
}

function redraw_214814(kxi_214816) {

		function HEX3Aanonymous_215001() {
			var F={procname:"redraw.:anonymous",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 637;
				dodraw_213631(kxi_214816);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.redraw",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		if ((kxi_214816.renderId == 0)) {
		F.line = 637;
		kxi_214816.renderId = window.requestAnimationFrame(HEX3Aanonymous_215001);
		}
		
	framePtr = F.prev;

	
}

function set_renderer_215078(renderer_215083, root_215084, client_post_render_callback_215088) {

		function HEX3Aanonymous_215246() {
			var F={procname:"setRenderer.:anonymous",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 667;
				redraw_214814(kxi_205324[0]);
			framePtr = F.prev;

			
		}

	var result_215089 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		if ((document.getElementById(root_215084) === null)) {
		F.line = 653;
		var msg_215097 = (("Could not find a <div> with id=" + root_215084) + ". Karax needs it as its rendering target.");
		F.line = 2956;
		var e_215101 = null;
		F.line = 2957;
		e_215101 = {m_type: NTI40026, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 655;
		e_215101.message = nimCopy(null, cstrToNimstr(msg_215097), NTI36040);
		F.line = 2952;
		e_215101.parent = null;
		F.line = 655;
		raiseException(e_215101, "Exception");
		}
		
		F.line = 657;
		result_215089 = {rootId: root_215084, renderer: renderer_215083, postRenderCallback: client_post_render_callback_215088, patches: new_seq_215125(60), patchesV: new_seq_215177(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		F.line = 665;
		kxi_205324[0] = result_215089;
		F.line = 666;
		window.onload = init_215046;
		F.line = 667;
		window.onhashchange = HEX3Aanonymous_215246;
	framePtr = F.prev;

	return result_215089;

}

function set_renderer_215274(renderer_215278, root_215279, client_post_render_callback_215282) {

		function wrap_renderer_215284(data_215286) {
			var result_215287 = null;

			var F={procname:"setRenderer.wrapRenderer",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 672;
				result_215287 = renderer_215278();
			framePtr = F.prev;

			return result_215287;

		}

		function wrap_post_render_215301(data_215303) {
			var F={procname:"setRenderer.wrapPostRender",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
			framePtr = F;
				if (!((client_post_render_callback_215282 == null))) {
				F.line = 674;
				client_post_render_callback_215282();
				}
				
			framePtr = F.prev;

			
		}

	var result_215283 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 671;
		result_215283 = set_renderer_215078(wrap_renderer_215284, root_215279, wrap_post_render_215301);
	framePtr = F.prev;

	return result_215283;

}

function is_none_276104(self_276109) {
	var result_276110 = false;

	var F={procname:"isNone.isNone",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/options.nim",line:0};
	framePtr = F;
		F.line = 115;
		result_276110 = (self_276109.val == null);
	framePtr = F.prev;

	return result_276110;

}

function ajax_218001(meth_218003, url_218004, headers_218007, data_218008, cont_218013, do_redraw_218014, kxi_218015, use_binary_218016, blob_218017) {

function cont_wrapper_218018(http_status_218020, response_218021) {
	var F={procname:"ajax.contWrapper",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/kajax.nim",line:0};
	framePtr = F;
		F.line = 16;
		cont_218013(http_status_218020, response_218021);
		if (do_redraw_218014) {
		F.line = 17;
		redraw_214814(kxi_218015);
		}
		
	framePtr = F.prev;

	
}

		function HEX3Aanonymous_218093() {
			var F={procname:"ajax.:anonymous",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/kajax.nim",line:0};
			framePtr = F;
				if ((this.readyState == 4)) {
				if ((this.status == 200)) {
				F.line = 40;
				cont_wrapper_218018(this.status, this.responseText);
				}
				else {
					F.line = 42;
				cont_wrapper_218018(this.status, this.responseText);
				}
				
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"hw.ajax",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/kajax.nim",line:0};
	framePtr = F;
		F.line = 33;
		var ajax_218083 = new XMLHttpRequest();
		F.line = 34;
		ajax_218083.open(meth_218003, url_218004, true);
		L1: do {
			F.line = 35;
			var a_218091 = null;
			F.line = 35;
			var b_218092 = null;
			F.line = 2284;
			var i_277018 = 0;
			L2: do {
				F.line = 2285;
					L3: while (true) {
					if (!(i_277018 < (headers_218007 != null ? headers_218007.length : 0))) break L3;
						F.line = 35;
						a_218091 = headers_218007[chckIndx(i_277018, 0, headers_218007.length+0-1)-0]["Field0"];
						F.line = 2286;
						b_218092 = headers_218007[chckIndx(i_277018, 0, headers_218007.length+0-1)-0]["Field1"];
						F.line = 36;
						ajax_218083.setRequestHeader(a_218091, b_218092);
						F.line = 2287;
						i_277018 = addInt(i_277018, 1);
					}
			} while(false);
		} while(false);
		F.line = 37;
		ajax_218083.onreadystatechange = HEX3Aanonymous_218093;
		if (use_binary_218016) {
		F.line = 44;
		ajax_218083.send(blob_218017);
		}
		else {
			F.line = 46;
		ajax_218083.send(data_218008);
		}
		
	framePtr = F.prev;

	
}

function ajax_get_218176(url_218178, headers_218181, cont_218186, do_redraw_218187, kxi_218188) {
	var F={procname:"hw.ajaxGet",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/kajax.nim",line:0};
	framePtr = F;
		F.line = 66;
		ajax_218001("GET", url_218178, headers_218181, null, cont_218186, do_redraw_218187, kxi_218188, false, null);
	framePtr = F.prev;

	
}

function raiseRangeError() {
		var e_52915 = null;
		e_52915 = {m_type: NTI40062, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_52915.message = nimCopy(null, makeNimstrLit("value out of range"), NTI36040);
		e_52915.parent = null;
		raiseException(e_52915, "RangeError");

	
}

function get_var_type_250382(x_250384) {
	var result_250385 = 0;

	var F={procname:"json.getVarType",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 852;
		result_250385 = 0;
		F.line = 855;
		switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_250384)))) {
		case "[object Array]":
			F.line = 856;
			result_250385 = 6;
			break BeforeRet;
			break;
		case "[object Object]":
			F.line = 857;
			result_250385 = 5;
			break BeforeRet;
			break;
		case "[object Number]":
			if ((x_250384 % 1.0000000000000000e+00 == 0.0)) {
			F.line = 860;
			result_250385 = 2;
			break BeforeRet;
			}
			else {
				F.line = 862;
				result_250385 = 3;
				break BeforeRet;
			}
			
			break;
		case "[object Boolean]":
			F.line = 863;
			result_250385 = 1;
			break BeforeRet;
			break;
		case "[object Null]":
			F.line = 864;
			result_250385 = 0;
			break BeforeRet;
			break;
		case "[object String]":
			F.line = 865;
			result_250385 = 4;
			break BeforeRet;
			break;
		default: 
			if (true) {
			F.line = 866;
			failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.choosenim/toolchains/nim-#devel/lib/pure/json.nim(866, 18) `false` "));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_250385;

}

function new_jarray_230639() {
		var Tmp1;

	var result_230641 = null;

	var F={procname:"json.newJArray",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 229;
		result_230641 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
		F.line = 230;
		result_230641.kind = 6;
		var Tmp1 = result_230641;
		if (ConstSet2[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
		F.line = 231;
		Tmp1.elems = nimCopy(null, [], NTI230665);
	framePtr = F.prev;

	return result_230641;

}

function len_250414(x_250416) {
	var result_250417 = 0;

	var F={procname:"json.len",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_250382(x_250416) == 6))) {
		F.line = 869;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.choosenim/toolchains/nim-#devel/lib/pure/json.nim(869, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 870;
		      result_250417 = x_250416.length;
    
	framePtr = F.prev;

	return result_250417;

}

function add_231005(father_231007, child_231008) {
		var Tmp1;
		var Tmp2;

	var F={procname:"json.add",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((father_231007.kind == 6))) {
		F.line = 301;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.choosenim/toolchains/nim-#devel/lib/pure/json.nim(301, 10) `father.kind == JArray` "));
		}
		
		F.line = 302;
		var Tmp1 = father_231007;
		if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
		if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_231008); } else { Tmp2 = [child_231008]; };
	framePtr = F.prev;

	
}

function HEX5BHEX5D_250814(x_250816, y_250817) {
	var result_250818 = {};

	var F={procname:"json.[]",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_250382(x_250816) == 6))) {
		F.line = 881;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.choosenim/toolchains/nim-#devel/lib/pure/json.nim(881, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 882;
		      result_250818 = x_250816[y_250817];
    
	framePtr = F.prev;

	return result_250818;

}

function is_power_of_two_87847(x_87849) {
		var Tmp1;

	var result_87850 = false;

	BeforeRet: do {
		if (!(0 < x_87849)) Tmp1 = false; else {			Tmp1 = ((x_87849 & (x_87849 - 1)) == 0);		}		result_87850 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_87850;

}

function init_ordered_table_230438(initial_size_230443) {
	var result_230445 = {data: null, counter: 0, first: 0, last: 0};

	var F={procname:"initOrderedTable.initOrderedTable",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_87847(initial_size_230443))) {
		F.line = 666;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.choosenim/toolchains/nim-#devel/lib/pure/collections/tables.nim(666, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 667;
		result_230445.counter = 0;
		F.line = 668;
		result_230445.first = -1;
		F.line = 669;
		result_230445.last = -1;
		F.line = 670;
		result_230445.data = new Array(chckRange(initial_size_230443, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_230443, 0, 2147483647);++i) {result_230445.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}	framePtr = F.prev;

	return result_230445;

}

function new_jobject_230423() {
		var Tmp1;

	var result_230425 = null;

	var F={procname:"json.newJObject",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 223;
		result_230425 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
		F.line = 224;
		result_230425.kind = 5;
		var Tmp1 = result_230425;
		if (ConstSet4[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
		F.line = 225;
		nimCopy(Tmp1.fields, init_ordered_table_230438(4), NTI230228);
	framePtr = F.prev;

	return result_230425;

}

function HEX21HEX26_192257(h_192259, val_192260) {
	var result_192261 = 0;

	var F={procname:"hashes.!&",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 52;
		result_192261 = ((h_192259 + val_192260) >>> 0);
		F.line = 53;
		result_192261 = ((result_192261 + (result_192261 << 10)) >>> 0);
		F.line = 54;
		result_192261 = (result_192261 ^ ((result_192261 >>> 0) >>> 6));
	framePtr = F.prev;

	return result_192261;

}

function HEX21HEX24_192311(h_192313) {
	var result_192314 = 0;

	var F={procname:"hashes.!$",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 59;
		result_192314 = ((h_192313 + (h_192313 << 3)) >>> 0);
		F.line = 60;
		result_192314 = (result_192314 ^ ((result_192314 >>> 0) >>> 11));
		F.line = 61;
		result_192314 = ((result_192314 + (result_192314 << 15)) >>> 0);
	framePtr = F.prev;

	return result_192314;

}

function hash_193098(x_193100) {
	var result_193101 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 132;
		var h_193102 = 0;
		L1: do {
			F.line = 133;
			var i_193114 = 0;
			F.line = 2137;
			var colontmp__204054 = 0;
			F.line = 133;
			colontmp__204054 = subInt((x_193100 != null ? x_193100.length : 0), 1);
			F.line = 2140;
			var res_204056 = 0;
			L2: do {
				F.line = 2141;
					L3: while (true) {
					if (!(res_204056 <= colontmp__204054)) break L3;
						F.line = 133;
						i_193114 = res_204056;
						F.line = 134;
						h_193102 = HEX21HEX26_192257(h_193102, x_193100[chckIndx(i_193114, 0, x_193100.length+0-1)-0]);
						F.line = 2143;
						res_204056 = addInt(res_204056, 1);
					}
			} while(false);
		} while(false);
		F.line = 135;
		result_193101 = HEX21HEX24_192311(h_193102);
	framePtr = F.prev;

	return result_193101;

}

function is_filled_195487(hcode_195489) {
	var result_195490 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
		F.line = 18;
		result_195490 = !((hcode_195489 == 0));
	framePtr = F.prev;

	return result_195490;

}

function next_try_195614(h_195616, max_hash_195617) {
	var result_195618 = 0;

	var F={procname:"tables.nextTry",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
		F.line = 28;
		result_195618 = (addInt(h_195616, 1) & max_hash_195617);
	framePtr = F.prev;

	return result_195618;

}

function raw_get_231589(t_231595, key_231597, hc_231599, hc_231599_Idx) {
						var Tmp3;

	var result_231600 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 43;
		hc_231599[hc_231599_Idx] = hash_193098(key_231597);
		if ((hc_231599[hc_231599_Idx] == 0)) {
		F.line = 45;
		hc_231599[hc_231599_Idx] = 314159265;
		}
		
		F.line = 31;
		var h_231612 = (hc_231599[hc_231599_Idx] & (t_231595.data != null ? (t_231595.data.length-1) : -1));
		L1: do {
			F.line = 32;
				L2: while (true) {
				if (!is_filled_195487(t_231595.data[chckIndx(h_231612, 0, t_231595.data.length+0-1)-0].Field0)) break L2;
						if (!(t_231595.data[chckIndx(h_231612, 0, t_231595.data.length+0-1)-0].Field0 == hc_231599[hc_231599_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_231595.data[chckIndx(h_231612, 0, t_231595.data.length+0-1)-0].Field2, key_231597);						}					if (Tmp3) {
					F.line = 38;
					result_231600 = h_231612;
					break BeforeRet;
					}
					
					F.line = 39;
					h_231612 = next_try_195614(h_231612, (t_231595.data != null ? (t_231595.data.length-1) : -1));
				}
		} while(false);
		F.line = 40;
		result_231600 = subInt(-1, h_231612);
	} while (false);
	framePtr = F.prev;

	return result_231600;

}

function must_rehash_195505(length_195507, counter_195508) {
	var result_195509 = false;

	var F={procname:"tables.mustRehash",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
		if (!((counter_195508 < length_195507))) {
		F.line = 24;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.choosenim/toolchains/nim-#devel/lib/pure/collections/tableimpl.nim(24, 9) `length > counter` "));
		}
		
		F.line = 25;
		result_195509 = ((mulInt(length_195507, 2) < mulInt(counter_195508, 3)) || (subInt(length_195507, counter_195508) < 4));
	framePtr = F.prev;

	return result_195509;

}

function raw_insert_234307(t_234314, data_234318, data_234318_Idx, key_234320, val_234322, hc_234324, h_234326) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 64;
		data_234318[data_234318_Idx][chckIndx(h_234326, 0, data_234318[data_234318_Idx].length+0-1)-0].Field2 = nimCopy(null, key_234320, NTI36040);
		F.line = 65;
		data_234318[data_234318_Idx][chckIndx(h_234326, 0, data_234318[data_234318_Idx].length+0-1)-0].Field3 = val_234322;
		F.line = 66;
		data_234318[data_234318_Idx][chckIndx(h_234326, 0, data_234318[data_234318_Idx].length+0-1)-0].Field0 = hc_234324;
		F.line = 620;
		data_234318[data_234318_Idx][chckIndx(h_234326, 0, data_234318[data_234318_Idx].length+0-1)-0].Field1 = -1;
		if ((t_234314.first < 0)) {
		F.line = 621;
		t_234314.first = h_234326;
		}
		
		if ((0 <= t_234314.last)) {
		F.line = 622;
		data_234318[data_234318_Idx][chckIndx(t_234314.last, 0, data_234318[data_234318_Idx].length+0-1)-0].Field1 = h_234326;
		}
		
		F.line = 623;
		t_234314.last = h_234326;
	framePtr = F.prev;

	
}

function enlarge_232730(t_232737) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 626;
		var n_232745 = null;
		F.line = 627;
		n_232745 = new Array(chckRange(mulInt((t_232737.data != null ? t_232737.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_232737.data != null ? t_232737.data.length : 0), 2), 0, 2147483647);++i) {n_232745[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 628;
		var h_232929 = t_232737.first;
		F.line = 629;
		t_232737.first = -1;
		F.line = 630;
		t_232737.last = -1;
		F.line = 631;
		var Tmp1 = t_232737.data; t_232737.data = n_232745; n_232745 = Tmp1;		L2: do {
			F.line = 632;
				L3: while (true) {
				if (!(0 <= h_232929)) break L3;
					F.line = 633;
					var nxt_233160 = n_232745[chckIndx(h_232929, 0, n_232745.length+0-1)-0].Field1;
					F.line = 634;
					var eh_233378 = n_232745[chckIndx(h_232929, 0, n_232745.length+0-1)-0].Field0;
					if (is_filled_195487(eh_233378)) {
					F.line = 636;
					var j_233387 = (eh_233378 & (t_232737.data != null ? (t_232737.data.length-1) : -1));
					L4: do {
						F.line = 637;
							L5: while (true) {
							if (!is_filled_195487(t_232737.data[chckIndx(j_233387, 0, t_232737.data.length+0-1)-0].Field0)) break L5;
								F.line = 638;
								j_233387 = next_try_195614(j_233387, (t_232737.data != null ? (t_232737.data.length-1) : -1));
							}
					} while(false);
					F.line = 639;
					raw_insert_234307(t_232737, t_232737, "data", n_232745[chckIndx(h_232929, 0, n_232745.length+0-1)-0].Field2, n_232745[chckIndx(h_232929, 0, n_232745.length+0-1)-0].Field3, n_232745[chckIndx(h_232929, 0, n_232745.length+0-1)-0].Field0, j_233387);
					}
					
					F.line = 640;
					h_232929 = nxt_233160;
				}
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_235469(t_235475, key_235477, hc_235479) {
	var result_235480 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 31;
		var h_235489 = (hc_235479 & (t_235475.data != null ? (t_235475.data.length-1) : -1));
		L1: do {
			F.line = 32;
				L2: while (true) {
				if (!is_filled_195487(t_235475.data[chckIndx(h_235489, 0, t_235475.data.length+0-1)-0].Field0)) break L2;
					if (((t_235475.data[chckIndx(h_235489, 0, t_235475.data.length+0-1)-0].Field0 == hc_235479) && eqStrings(t_235475.data[chckIndx(h_235489, 0, t_235475.data.length+0-1)-0].Field2, key_235477))) {
					F.line = 38;
					result_235480 = h_235489;
					break BeforeRet;
					}
					
					F.line = 39;
					h_235489 = next_try_195614(h_235489, (t_235475.data != null ? (t_235475.data.length-1) : -1));
				}
		} while(false);
		F.line = 40;
		result_235480 = subInt(-1, h_235489);
	} while (false);
	framePtr = F.prev;

	return result_235480;

}

function HEX5BHEX5DHEX3D_231548(t_231555, key_231557, val_231559) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 97;
		var hc_231560 = [0];
		F.line = 98;
		var index_232289 = raw_get_231589(t_231555, key_231557, hc_231560, 0);
		if ((0 <= index_232289)) {
		F.line = 99;
		t_231555.data[chckIndx(index_232289, 0, t_231555.data.length+0-1)-0].Field3 = val_231559;
		}
		else {
			if (must_rehash_195505((t_231555.data != null ? t_231555.data.length : 0), t_231555.counter)) {
			F.line = 90;
			enlarge_232730(t_231555);
			F.line = 91;
			index_232289 = raw_get_known_hc_235469(t_231555, key_231557, hc_231560[0]);
			}
			
			F.line = 92;
			index_232289 = subInt(-1, index_232289);
			F.line = 93;
			raw_insert_234307(t_231555, t_231555, "data", key_231557, val_231559, hc_231560[0], index_232289);
			F.line = 100;
			t_231555.counter = addInt(t_231555.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_243071(obj_243073, key_243074, val_243075) {
		var Tmp1;

	var F={procname:"json.[]=",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((obj_243073.kind == 5))) {
		F.line = 512;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.choosenim/toolchains/nim-#devel/lib/pure/json.nim(512, 9) `obj.kind == JObject` "));
		}
		
		F.line = 513;
		var Tmp1 = obj_243073;
		if (ConstSet5[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
		HEX5BHEX5DHEX3D_231548(Tmp1.fields, key_243074, val_243075);
	framePtr = F.prev;

	
}

function new_jint_230321(n_230323) {
		var Tmp1;

	var result_230324 = null;

	var F={procname:"json.newJInt",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 201;
		result_230324 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
		F.line = 202;
		result_230324.kind = 2;
		var Tmp1 = result_230324;
		if (ConstSet6[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("num")); }
		F.line = 203;
		Tmp1.num = n_230323;
	framePtr = F.prev;

	return result_230324;

}

function new_jfloat_230347(n_230349) {
		var Tmp1;

	var result_230350 = null;

	var F={procname:"json.newJFloat",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 207;
		result_230350 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
		F.line = 208;
		result_230350.kind = 3;
		var Tmp1 = result_230350;
		if (ConstSet7[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("fnum")); }
		F.line = 209;
		Tmp1.fnum = n_230349;
	framePtr = F.prev;

	return result_230350;

}

function new_jstring_230269(s_230271) {
		var Tmp1;

	var result_230272 = null;

	var F={procname:"json.newJString",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 190;
		result_230272 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
		F.line = 191;
		result_230272.kind = 4;
		var Tmp1 = result_230272;
		if (ConstSet8[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("str")); }
		F.line = 192;
		Tmp1.str = nimCopy(null, s_230271, NTI36040);
	framePtr = F.prev;

	return result_230272;

}

function new_jbool_230373(b_230375) {
		var Tmp1;

	var result_230376 = null;

	var F={procname:"json.newJBool",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 213;
		result_230376 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
		F.line = 214;
		result_230376.kind = 1;
		var Tmp1 = result_230376;
		if (ConstSet9[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("bval")); }
		F.line = 215;
		Tmp1.bval = b_230375;
	framePtr = F.prev;

	return result_230376;

}

function new_jnull_230399() {
	var result_230401 = null;

	var F={procname:"json.newJNull",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 219;
		result_230401 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_230401;

}

function convert_object_251014(x_251016) {
	var result_251017 = null;

	var F={procname:"json.convertObject",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 887;
		switch (get_var_type_250382(x_251016)) {
		case 6:
			F.line = 889;
			result_251017 = new_jarray_230639();
			L1: do {
				F.line = 890;
				var i_251028 = 0;
				F.line = 3678;
				var colontmp__277029 = 0;
				F.line = 890;
				colontmp__277029 = len_250414(x_251016);
				F.line = 3679;
				var i_277031 = 0;
				L2: do {
					F.line = 3680;
						L3: while (true) {
						if (!(i_277031 < colontmp__277029)) break L3;
							F.line = 890;
							i_251028 = i_277031;
							F.line = 891;
							add_231005(result_251017, convert_object_251014(HEX5BHEX5D_250814(x_251016, i_251028)));
							F.line = 3682;
							i_277031 = addInt(i_277031, 1);
						}
				} while(false);
			} while(false);
			break;
		case 5:
			F.line = 893;
			result_251017 = new_jobject_230423();
			F.line = 894;
			for (var property in x_251016) {
        if (x_251016.hasOwnProperty(property)) {
      
			F.line = 897;
			var nim_property_251030 = null;
			F.line = 898;
			var nim_value_251031 = {};
			F.line = 899;
			nim_property_251030 = property; nim_value_251031 = x_251016[property];
			F.line = 900;
			HEX5BHEX5DHEX3D_243071(result_251017, cstrToNimstr(nim_property_251030), convert_object_251014(nim_value_251031));
			F.line = 901;
			}}
			break;
		case 2:
			F.line = 903;
			result_251017 = new_jint_230321(x_251016);
			break;
		case 3:
			F.line = 905;
			result_251017 = new_jfloat_230347(x_251016);
			break;
		case 4:
			F.line = 907;
			result_251017 = new_jstring_230269(cstrToNimstr(x_251016));
			break;
		case 1:
			F.line = 909;
			result_251017 = new_jbool_230373(x_251016);
			break;
		case 0:
			F.line = 911;
			result_251017 = new_jnull_230399();
			break;
		}
	framePtr = F.prev;

	return result_251017;

}

function parse_json_251045(buffer_251047) {
	var result_251048 = null;

	var F={procname:"json.parseJson",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 914;
		result_251048 = convert_object_251014(JSON.parse(toJSStr(buffer_251047)));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_251048;

}

function invalid_format_string_185338() {
		var e_185343 = null;
		e_185343 = {m_type: NTI40052, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_185343.message = nimCopy(null, makeNimstrLit("invalid format string"), NTI36040);
		e_185343.parent = null;
		raiseException(e_185343, "ValueError");

	
}

function nsuToLowerAsciiChar(c_178157) {
	var result_178158 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet14[c_178157] != undefined)) {
		F.line = 265;
		result_178158 = chckRange(addInt(c_178157, 32), 0, 255);
		}
		else {
			F.line = 267;
			result_178158 = c_178157;
		}
		
	framePtr = F.prev;

	return result_178158;

}

function nsuCmpIgnoreStyle(a_178476, b_178477) {
					var Tmp7;
					var Tmp8;

	var result_178478 = 0;

	BeforeRet: do {
		var i_178480 = 0;
		var j_178482 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					L3: do {
							L4: while (true) {
							if (!((i_178480 < (a_178476 != null ? a_178476.length : 0)) && (a_178476[i_178480] == 95))) break L4;
								i_178480 += 1;
							}
					} while(false);
					L5: do {
							L6: while (true) {
							if (!((j_178482 < (b_178477 != null ? b_178477.length : 0)) && (b_178477[j_178482] == 95))) break L6;
								j_178482 += 1;
							}
					} while(false);
					if ((i_178480 < (a_178476 != null ? a_178476.length : 0))) {
					Tmp7 = nsuToLowerAsciiChar(a_178476[i_178480]);
					}
					else {
					Tmp7 = 0;
					}
					
					var aa_178501 = Tmp7;
					if ((j_178482 < (b_178477 != null ? b_178477.length : 0))) {
					Tmp8 = nsuToLowerAsciiChar(b_178477[j_178482]);
					}
					else {
					Tmp8 = 0;
					}
					
					var bb_178502 = Tmp8;
					result_178478 = (aa_178501 - bb_178502);
					if (!((result_178478 == 0))) {
					break BeforeRet;
					}
					
					if (((a_178476 != null ? a_178476.length : 0) <= i_178480)) {
					if (((b_178477 != null ? b_178477.length : 0) <= j_178482)) {
					result_178478 = 0;
					break BeforeRet;
					}
					
					result_178478 = -1;
					break BeforeRet;
					}
					else {
					if (((b_178477 != null ? b_178477.length : 0) <= j_178482)) {
					result_178478 = 1;
					break BeforeRet;
					}
					}
					i_178480 += 1;
					j_178482 += 1;
				}
		} while(false);
	} while (false);

	return result_178478;

}

function find_normalized_185300(x_185302, in_array_185304) {
	var result_185305 = 0;

	BeforeRet: do {
		var i_185307 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_185307 < (in_array_185304 != null ? (in_array_185304.length-1) : -1))) break L2;
					if ((nsuCmpIgnoreStyle(x_185302, in_array_185304[i_185307]) == 0)) {
					result_185305 = i_185307;
					break BeforeRet;
					}
					
					i_185307 += 2;
				}
		} while(false);
		result_185305 = -1;
		break BeforeRet;
	} while (false);

	return result_185305;

}

function substr_60222(s_60224, first_60225, last_60226) {
	var result_60227 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 4317;
		var first_60228 = nimMax(first_60225, 0);
		F.line = 4318;
		var l_60230 = nimMax(addInt(subInt(nimMin(last_60226, (s_60224 != null ? (s_60224.length-1) : -1)), first_60228), 1), 0);
		F.line = 4319;
		result_60227 = nimCopy(null, mnewString(chckRange(l_60230, 0, 2147483647)), NTI36040);
		L1: do {
			F.line = 4320;
			var i_60242 = 0;
			F.line = 2137;
			var colontmp__187687 = 0;
			F.line = 4320;
			colontmp__187687 = subInt(l_60230, 1);
			F.line = 2140;
			var res_187689 = 0;
			L2: do {
				F.line = 2141;
					L3: while (true) {
					if (!(res_187689 <= colontmp__187687)) break L3;
						F.line = 4320;
						i_60242 = res_187689;
						F.line = 4321;
						result_60227[chckIndx(i_60242, 0, result_60227.length+0-1)-0] = s_60224[chckIndx(addInt(i_60242, first_60228), 0, s_60224.length+0-1)-0];
						F.line = 2143;
						res_187689 = addInt(res_187689, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_60227;

}

function nsuAddf(s_185369, s_185369_Idx, formatstr_185370, a_185372) {
									var Tmp5;
						var Tmp6;
							var Tmp7;
						var Tmp10;
							var Tmp11;
								var Tmp12;
									var Tmp15;
							var Tmp16;

		var i_185376 = 0;
		var num_185378 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_185376 < (formatstr_185370 != null ? formatstr_185370.length : 0))) break L2;
					if (((formatstr_185370[i_185376] == 36) && ((i_185376 + 1) < (formatstr_185370 != null ? formatstr_185370.length : 0)))) {
					switch (formatstr_185370[(i_185376 + 1)]) {
					case 35:
						if (((a_185372 != null ? (a_185372.length-1) : -1) < num_185378)) {
						invalid_format_string_185338();
						}
						
						if (s_185369[s_185369_Idx] != null) { s_185369[s_185369_Idx] = (s_185369[s_185369_Idx]).concat(a_185372[num_185378]); } else { s_185369[s_185369_Idx] = a_185372[num_185378].slice(); };
						i_185376 += 2;
						num_185378 += 1;
						break;
					case 36:
						if (s_185369[s_185369_Idx] != null) { addChar(s_185369[s_185369_Idx], 36); } else { s_185369[s_185369_Idx] = [36]; };
						i_185376 += 2;
						break;
					case 49:
					case 50:
					case 51:
					case 52:
					case 53:
					case 54:
					case 55:
					case 56:
					case 57:
					case 45:
						var j_185414 = 0;
						i_185376 += 1;
						var negative_185424 = (formatstr_185370[i_185376] == 45);
						if (negative_185424) {
						i_185376 += 1;
						}
						
						L3: do {
								L4: while (true) {
									if (!(i_185376 < (formatstr_185370 != null ? formatstr_185370.length : 0))) Tmp5 = false; else {										Tmp5 = (ConstSet11[formatstr_185370[i_185376]] != undefined);									}								if (!Tmp5) break L4;
									j_185414 = (((j_185414 * 10) + formatstr_185370[i_185376]) - 48);
									i_185376 += 1;
								}
						} while(false);
						if (!(negative_185424)) {
						Tmp6 = (j_185414 - 1);
						}
						else {
						Tmp6 = ((a_185372 != null ? a_185372.length : 0) - j_185414);
						}
						
						var idx_185470 = Tmp6;
							if ((idx_185470 < 0)) Tmp7 = true; else {								Tmp7 = ((a_185372 != null ? (a_185372.length-1) : -1) < idx_185470);							}						if (Tmp7) {
						invalid_format_string_185338();
						}
						
						if (s_185369[s_185369_Idx] != null) { s_185369[s_185369_Idx] = (s_185369[s_185369_Idx]).concat(a_185372[idx_185470]); } else { s_185369[s_185369_Idx] = a_185372[idx_185470].slice(); };
						break;
					case 123:
						var j_185478 = (i_185376 + 2);
						var k_185480 = 0;
						var negative_185481 = (formatstr_185370[j_185478] == 45);
						if (negative_185481) {
						j_185478 += 1;
						}
						
						var is_number_185492 = 0;
						L8: do {
								L9: while (true) {
								if (!((j_185478 < (formatstr_185370 != null ? formatstr_185370.length : 0)) && !((ConstSet12[formatstr_185370[j_185478]] != undefined)))) break L9;
									if ((ConstSet13[formatstr_185370[j_185478]] != undefined)) {
									k_185480 = (((k_185480 * 10) + formatstr_185370[j_185478]) - 48);
									if ((is_number_185492 == 0)) {
									is_number_185492 = 1;
									}
									
									}
									else {
										is_number_185492 = -1;
									}
									
									j_185478 += 1;
								}
						} while(false);
						if ((is_number_185492 == 1)) {
						if (!(negative_185481)) {
						Tmp10 = (k_185480 - 1);
						}
						else {
						Tmp10 = ((a_185372 != null ? a_185372.length : 0) - k_185480);
						}
						
						var idx_185540 = Tmp10;
							if ((idx_185540 < 0)) Tmp11 = true; else {								Tmp11 = ((a_185372 != null ? (a_185372.length-1) : -1) < idx_185540);							}						if (Tmp11) {
						invalid_format_string_185338();
						}
						
						if (s_185369[s_185369_Idx] != null) { s_185369[s_185369_Idx] = (s_185369[s_185369_Idx]).concat(a_185372[idx_185540]); } else { s_185369[s_185369_Idx] = a_185372[idx_185540].slice(); };
						}
						else {
							var x_185548 = find_normalized_185300(substr_60222(formatstr_185370, (i_185376 + 2), (j_185478 - 1)), a_185372);
								if (!(0 <= x_185548)) Tmp12 = false; else {									Tmp12 = (x_185548 < (a_185372 != null ? (a_185372.length-1) : -1));								}							if (Tmp12) {
							if (s_185369[s_185369_Idx] != null) { s_185369[s_185369_Idx] = (s_185369[s_185369_Idx]).concat(a_185372[(x_185548 + 1)]); } else { s_185369[s_185369_Idx] = a_185372[(x_185548 + 1)].slice(); };
							}
							else {
							invalid_format_string_185338();
							}
							
						}
						
						i_185376 = (j_185478 + 1);
						break;
					case 97:
					case 98:
					case 99:
					case 100:
					case 101:
					case 102:
					case 103:
					case 104:
					case 105:
					case 106:
					case 107:
					case 108:
					case 109:
					case 110:
					case 111:
					case 112:
					case 113:
					case 114:
					case 115:
					case 116:
					case 117:
					case 118:
					case 119:
					case 120:
					case 121:
					case 122:
					case 65:
					case 66:
					case 67:
					case 68:
					case 69:
					case 70:
					case 71:
					case 72:
					case 73:
					case 74:
					case 75:
					case 76:
					case 77:
					case 78:
					case 79:
					case 80:
					case 81:
					case 82:
					case 83:
					case 84:
					case 85:
					case 86:
					case 87:
					case 88:
					case 89:
					case 90:
					case 128:
					case 129:
					case 130:
					case 131:
					case 132:
					case 133:
					case 134:
					case 135:
					case 136:
					case 137:
					case 138:
					case 139:
					case 140:
					case 141:
					case 142:
					case 143:
					case 144:
					case 145:
					case 146:
					case 147:
					case 148:
					case 149:
					case 150:
					case 151:
					case 152:
					case 153:
					case 154:
					case 155:
					case 156:
					case 157:
					case 158:
					case 159:
					case 160:
					case 161:
					case 162:
					case 163:
					case 164:
					case 165:
					case 166:
					case 167:
					case 168:
					case 169:
					case 170:
					case 171:
					case 172:
					case 173:
					case 174:
					case 175:
					case 176:
					case 177:
					case 178:
					case 179:
					case 180:
					case 181:
					case 182:
					case 183:
					case 184:
					case 185:
					case 186:
					case 187:
					case 188:
					case 189:
					case 190:
					case 191:
					case 192:
					case 193:
					case 194:
					case 195:
					case 196:
					case 197:
					case 198:
					case 199:
					case 200:
					case 201:
					case 202:
					case 203:
					case 204:
					case 205:
					case 206:
					case 207:
					case 208:
					case 209:
					case 210:
					case 211:
					case 212:
					case 213:
					case 214:
					case 215:
					case 216:
					case 217:
					case 218:
					case 219:
					case 220:
					case 221:
					case 222:
					case 223:
					case 224:
					case 225:
					case 226:
					case 227:
					case 228:
					case 229:
					case 230:
					case 231:
					case 232:
					case 233:
					case 234:
					case 235:
					case 236:
					case 237:
					case 238:
					case 239:
					case 240:
					case 241:
					case 242:
					case 243:
					case 244:
					case 245:
					case 246:
					case 247:
					case 248:
					case 249:
					case 250:
					case 251:
					case 252:
					case 253:
					case 254:
					case 255:
					case 95:
						var j_185557 = (i_185376 + 1);
						L13: do {
								L14: while (true) {
									if (!(j_185557 < (formatstr_185370 != null ? formatstr_185370.length : 0))) Tmp15 = false; else {										Tmp15 = (ConstSet15[formatstr_185370[j_185557]] != undefined);									}								if (!Tmp15) break L14;
									j_185557 += 1;
								}
						} while(false);
						var x_185576 = find_normalized_185300(substr_60222(formatstr_185370, (i_185376 + 1), (j_185557 - 1)), a_185372);
							if (!(0 <= x_185576)) Tmp16 = false; else {								Tmp16 = (x_185576 < (a_185372 != null ? (a_185372.length-1) : -1));							}						if (Tmp16) {
						if (s_185369[s_185369_Idx] != null) { s_185369[s_185369_Idx] = (s_185369[s_185369_Idx]).concat(a_185372[(x_185576 + 1)]); } else { s_185369[s_185369_Idx] = a_185372[(x_185576 + 1)].slice(); };
						}
						else {
						invalid_format_string_185338();
						}
						
						i_185376 = j_185557;
						break;
					default: 
						invalid_format_string_185338();
						break;
					}
					}
					else {
						if (s_185369[s_185369_Idx] != null) { addChar(s_185369[s_185369_Idx], formatstr_185370[i_185376]); } else { s_185369[s_185369_Idx] = [formatstr_185370[i_185376]]; };
						i_185376 += 1;
					}
					
				}
		} while(false);

	
}

function nsuFormatOpenArray(formatstr_185609, a_185611) {
	var result_185612 = [null];

		result_185612[0] = nimCopy(null, mnewString(0), NTI36040);
		nsuAddf(result_185612, 0, formatstr_185609, a_185611);

	return result_185612[0];

}

function is_undefined_55084(x_55088) {
	var result_55089 = false;

	var F={procname:"isUndefined.isUndefined",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/system/reprjs.nim",line:0};
	framePtr = F;
		F.line = 34;
		result_55089 = x_55088 === undefined;
	framePtr = F.prev;

	return result_55089;

}

function add_quoted_275402(s_275406, s_275406_Idx, x_275408) {
	var F={procname:"addQuoted.addQuoted",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 4162;
		if (s_275406[s_275406_Idx] != null) { s_275406[s_275406_Idx] = (s_275406[s_275406_Idx]).concat(reprEnum(x_275408, NTI230202)); } else { s_275406[s_275406_Idx] = reprEnum(x_275408, NTI230202).slice(); };
	framePtr = F.prev;

	
}

function collection_to_string_275311(x_275315, prefix_275317, separator_275319, suffix_275321) {
	var result_275322 = [null];

	var F={procname:"collectionToString.collectionToString",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 2679;
		result_275322[0] = nimCopy(null, prefix_275317, NTI36040);
		F.line = 2680;
		var first_element_275323 = true;
		L1: do {
			F.line = 2681;
			var value_275381 = 0;
			F.line = 2318;
			var i_277055 = 0;
			L2: do {
				F.line = 2319;
					L3: while (true) {
					if (!(i_277055 <= 6)) break L3;
						if ((x_275315[chckRange(i_277055, 0, 6)] != undefined)) {
						F.line = 2681;
						value_275381 = chckRange(i_277055, 0, 6);
						if (first_element_275323) {
						F.line = 2683;
						first_element_275323 = false;
						}
						else {
							F.line = 2685;
						if (result_275322[0] != null) { result_275322[0] = (result_275322[0]).concat(separator_275319); } else { result_275322[0] = separator_275319.slice(); };
						}
						
						F.line = 2694;
						add_quoted_275402(result_275322, 0, value_275381);
						}
						
						F.line = 2321;
						i_277055 = addInt(i_277055, 1);
					}
			} while(false);
		} while(false);
		F.line = 2696;
		if (result_275322[0] != null) { result_275322[0] = (result_275322[0]).concat(suffix_275321); } else { result_275322[0] = suffix_275321.slice(); };
	framePtr = F.prev;

	return result_275322[0];

}

function HEX24_275303(x_275308) {
	var result_275309 = null;

	var F={procname:"$.$",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 2699;
		result_275309 = nimCopy(null, collection_to_string_275311(x_275308, makeNimstrLit("{"), makeNimstrLit(", "), makeNimstrLit("}")), NTI36040);
	framePtr = F.prev;

	return result_275309;

}

function len_238215(t_238221) {
	var result_238222 = 0;

	var F={procname:"len.len",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 523;
		result_238222 = t_238221.counter;
	framePtr = F.prev;

	return result_238222;

}

function len_240974(n_240976) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_240977 = 0;

	var F={procname:"json.len",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 466;
		switch (n_240976.kind) {
		case 6:
			F.line = 467;
			var Tmp1 = n_240976;
			if (ConstSet17[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
			result_240977 = ((Tmp2 = Tmp1.elems, Tmp2) != null ? Tmp2.length : 0);
			break;
		case 5:
			F.line = 468;
			var Tmp3 = n_240976;
			if (ConstSet18[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
			result_240977 = len_238215(Tmp3.fields);
			break;
		default: 
			break;
		}
	framePtr = F.prev;

	return result_240977;

}

function HEX5BHEX5D_241841(node_241843, index_241844) {
		var Tmp1;
		var Tmp2;

	var result_241845 = null;

	var F={procname:"json.[]",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!(!((node_241843 === null)))) {
		F.line = 488;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.choosenim/toolchains/nim-#devel/lib/pure/json.nim(488, 9) `not isNil(node)` "));
		}
		
		if (!((node_241843.kind == 6))) {
		F.line = 489;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.choosenim/toolchains/nim-#devel/lib/pure/json.nim(489, 9) `node.kind == JArray` "));
		}
		
		F.line = 490;
		var Tmp1 = node_241843;
		if (ConstSet20[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
		result_241845 = (Tmp2 = Tmp1.elems, Tmp2)[chckIndx(index_241844, 0, Tmp2.length+0-1)-0];
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_241845;

}

function raw_get_239752(t_239757, key_239759, hc_239761, hc_239761_Idx) {
						var Tmp3;

	var result_239762 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 43;
		hc_239761[hc_239761_Idx] = hash_193098(key_239759);
		if ((hc_239761[hc_239761_Idx] == 0)) {
		F.line = 45;
		hc_239761[hc_239761_Idx] = 314159265;
		}
		
		F.line = 31;
		var h_239774 = (hc_239761[hc_239761_Idx] & (t_239757.data != null ? (t_239757.data.length-1) : -1));
		L1: do {
			F.line = 32;
				L2: while (true) {
				if (!is_filled_195487(t_239757.data[chckIndx(h_239774, 0, t_239757.data.length+0-1)-0].Field0)) break L2;
						if (!(t_239757.data[chckIndx(h_239774, 0, t_239757.data.length+0-1)-0].Field0 == hc_239761[hc_239761_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_239757.data[chckIndx(h_239774, 0, t_239757.data.length+0-1)-0].Field2, key_239759);						}					if (Tmp3) {
					F.line = 38;
					result_239762 = h_239774;
					break BeforeRet;
					}
					
					F.line = 39;
					h_239774 = next_try_195614(h_239774, (t_239757.data != null ? (t_239757.data.length-1) : -1));
				}
		} while(false);
		F.line = 40;
		result_239762 = subInt(-1, h_239774);
	} while (false);
	framePtr = F.prev;

	return result_239762;

}

function HEX5BHEX5D_239735(t_239742, key_239744) {
	var result_239746 = null;
	var result_239746_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 158;
		var hc_239748 = [0];
		F.line = 159;
		var index_239750 = raw_get_239752(t_239742, key_239744, hc_239748, 0);
		if ((0 <= index_239750)) {
		F.line = 160;
		result_239746 = t_239742.data[chckIndx(index_239750, 0, t_239742.data.length+0-1)-0]; result_239746_Idx = "Field3";
		}
		else {
			F.line = 2956;
			var e_240804 = null;
			F.line = 2957;
			e_240804 = {m_type: NTI40054, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 163;
			e_240804.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_239744 || []), NTI36040);
			F.line = 2952;
			e_240804.parent = null;
			F.line = 163;
			raiseException(e_240804, "KeyError");
		}
		
	framePtr = F.prev;

	return [result_239746, result_239746_Idx];

}

function HEX5BHEX5D_241174(node_241176, name_241177) {
		var Tmp1;
		var Tmp2;

	var result_241178 = null;

	var F={procname:"json.[]",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!(!((node_241176 === null)))) {
		F.line = 478;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.choosenim/toolchains/nim-#devel/lib/pure/json.nim(478, 9) `not isNil(node)` "));
		}
		
		if (!((node_241176.kind == 5))) {
		F.line = 479;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.choosenim/toolchains/nim-#devel/lib/pure/json.nim(479, 9) `node.kind == JObject` "));
		}
		
		F.line = 482;
		var Tmp1 = node_241176;
		if (ConstSet23[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
		result_241178 = (Tmp2 = HEX5BHEX5D_239735(Tmp1.fields, name_241177), Tmp2)[0][Tmp2[1]];
	framePtr = F.prev;

	return result_241178;

}

function is_some_275852(self_275857) {
	var result_275858 = false;

	var F={procname:"isSome.isSome",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/options.nim",line:0};
	framePtr = F;
		F.line = 109;
		result_275858 = !((self_275857.val == null));
	framePtr = F.prev;

	return result_275858;

}

function add_276254(x_276260, x_276260_Idx, y_276263) {
		var Tmp1;

	var F={procname:"add.add",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 1642;
		var xl_276271 = (x_276260[x_276260_Idx] != null ? x_276260[x_276260_Idx].length : 0);
		F.line = 1643;
		if (x_276260[x_276260_Idx] === null) x_276260[x_276260_Idx] = [];
               if (x_276260[x_276260_Idx].length < (Tmp1 = chckRange(addInt(xl_276271, (y_276263 != null ? y_276263.length : 0)), 0, 2147483647), Tmp1)) { for (var i=x_276260[x_276260_Idx].length;i<Tmp1;++i) x_276260[x_276260_Idx].push(null); }
               else { x_276260[x_276260_Idx].length = Tmp1; };
		L2: do {
			F.line = 1644;
			var i_276306 = 0;
			F.line = 2137;
			var colontmp__277059 = 0;
			F.line = 1644;
			colontmp__277059 = (y_276263 != null ? (y_276263.length-1) : -1);
			F.line = 2140;
			var res_277061 = 0;
			L3: do {
				F.line = 2141;
					L4: while (true) {
					if (!(res_277061 <= colontmp__277059)) break L4;
						F.line = 1644;
						i_276306 = res_277061;
						F.line = 1644;
						x_276260[x_276260_Idx][chckIndx(addInt(xl_276271, i_276306), 0, x_276260[x_276260_Idx].length+0-1)-0] = y_276263[chckIndx(i_276306, 0, y_276263.length+0-1)-0];
						F.line = 2143;
						res_277061 = addInt(res_277061, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function get_276077(self_276083) {
	var result_276085 = null;
	var result_276085_Idx = 0;

	var F={procname:"get.get",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/options.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (is_none_276104(self_276083)) {
		F.line = 2956;
		var e_276227 = null;
		F.line = 2957;
		e_276227 = {m_type: NTI219031, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 142;
		e_276227.message = nimCopy(null, makeNimstrLit("Can\'t obtain a value from a `none`"), NTI36040);
		F.line = 2952;
		e_276227.parent = null;
		F.line = 142;
		raiseException(e_276227, "UnpackError");
		}
		
		F.line = 143;
		result_276085 = self_276083; result_276085_Idx = "val";
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return [result_276085, result_276085_Idx];

}

function some_276322(val_276326) {
	var result_276328 = {val: null};

	var F={procname:"some.some",prev:framePtr,filename:"../../../../../../../.choosenim/toolchains/nim-#devel/lib/pure/options.nim",line:0};
	framePtr = F;
		if (!(!((val_276326 == null)))) {
		F.line = 85;
		failed_assert_impl_57280(makeNimstrLit("/home/bketelsen/.choosenim/toolchains/nim-#devel/lib/pure/options.nim(85, 12) `\x0Anot (val == nil)` "));
		}
		
		F.line = 86;
		result_276328.val = val_276326;
	framePtr = F.prev;

	return result_276328;

}

function on_course_list_275159(http_status_275161, response_275162) {
						var Tmp4;
							var Tmp5;
								var Tmp6;
							var Tmp7;
								var Tmp8;
		var Tmp9;

	var F={procname:"hw.onCourseList",prev:framePtr,filename:"hw.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 32;
		state_275143[0].loading = false;
		F.line = 33;
		state_275143[0].status = chckRange(http_status_275161, 0, 599);
		if (!((state_275143[0].status == 200))) {
		F.line = 34;
		break BeforeRet;
		}
		
		F.line = 35;
		var parsed_275163 = parse_json_251045(cstrToNimstr(response_275162));
		F.line = 36;
		F.line = 1517;
		var temp_275175 = parsed_275163;
		F.line = 1325;
		var list_275257 = [];
		if (!((ConstSet10[temp_275175.kind] != undefined))) {
		F.line = 946;
		var msg_275290 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_275303(ConstSet16), makeNimstrLit("temp275175"), reprEnum(temp_275175.kind, NTI230202)]);
		F.line = 2956;
		var e_275656 = null;
		F.line = 2957;
		e_275656 = {m_type: NTI228039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 951;
		e_275656.message = nimCopy(null, msg_275290, NTI36040);
		F.line = 2952;
		e_275656.parent = null;
		F.line = 951;
		raiseException(e_275656, "JsonKindError");
		}
		
		L1: do {
			F.line = 1318;
			var i_275199 = 0;
			F.line = 3678;
			var colontmp__277022 = 0;
			F.line = 1327;
			colontmp__277022 = len_240974(temp_275175);
			F.line = 3679;
			var i_277024 = 0;
			L2: do {
				F.line = 3680;
					L3: while (true) {
					if (!(i_277024 < colontmp__277022)) break L3;
						F.line = 1327;
						i_275199 = i_277024;
						F.line = 1327;
						if (!((ConstSet19[HEX5BHEX5D_241841(temp_275175, i_275199).kind] != undefined))) {
						F.line = 946;
						var msg_275679 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_275303(ConstSet21), makeNimstrLit("temp275175[i275199]"), reprEnum(HEX5BHEX5D_241841(temp_275175, i_275199).kind, NTI230202)]);
						F.line = 2956;
						var e_275707 = null;
						F.line = 2957;
						e_275707 = {m_type: NTI228039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
						F.line = 951;
						e_275707.message = nimCopy(null, msg_275679, NTI36040);
						F.line = 2952;
						e_275707.parent = null;
						F.line = 951;
						raiseException(e_275707, "JsonKindError");
						}
						
						if ((HEX5BHEX5D_241841(temp_275175, i_275199).kind == 0)) {
						Tmp4 = null;
						}
						else {
							F.line = 1458;
							var res_275270 = {name: null, description: null};
							F.line = 1428;
							if (!((ConstSet22[HEX5BHEX5D_241174(HEX5BHEX5D_241841(temp_275175, i_275199), makeNimstrLit("name")).kind] != undefined))) {
							F.line = 946;
							var msg_275727 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_275303(ConstSet24), makeNimstrLit("temp275175[i275199][\"name\"]"), reprEnum(HEX5BHEX5D_241174(HEX5BHEX5D_241841(temp_275175, i_275199), makeNimstrLit("name")).kind, NTI230202)]);
							F.line = 2956;
							var e_275755 = null;
							F.line = 2957;
							e_275755 = {m_type: NTI228039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
							F.line = 951;
							e_275755.message = nimCopy(null, msg_275727, NTI36040);
							F.line = 2952;
							e_275755.parent = null;
							F.line = 951;
							raiseException(e_275755, "JsonKindError");
							}
							
							if ((HEX5BHEX5D_241174(HEX5BHEX5D_241841(temp_275175, i_275199), makeNimstrLit("name")).kind == 0)) {
							Tmp5 = [];
							}
							else {
								var Tmp6 = HEX5BHEX5D_241174(HEX5BHEX5D_241841(temp_275175, i_275199), makeNimstrLit("name"));
								if (ConstSet25[Tmp6.kind]===undefined) { raiseFieldError(makeNimstrLit("str")); }
							Tmp5 = Tmp6.str;
							}
							
							res_275270.name = nimCopy(null, Tmp5, NTI36040);
							F.line = 1428;
							if (!((ConstSet26[HEX5BHEX5D_241174(HEX5BHEX5D_241841(temp_275175, i_275199), makeNimstrLit("description")).kind] != undefined))) {
							F.line = 946;
							var msg_275776 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_275303(ConstSet27), makeNimstrLit("temp275175[i275199][\"description\"]"), reprEnum(HEX5BHEX5D_241174(HEX5BHEX5D_241841(temp_275175, i_275199), makeNimstrLit("description")).kind, NTI230202)]);
							F.line = 2956;
							var e_275804 = null;
							F.line = 2957;
							e_275804 = {m_type: NTI228039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
							F.line = 951;
							e_275804.message = nimCopy(null, msg_275776, NTI36040);
							F.line = 2952;
							e_275804.parent = null;
							F.line = 951;
							raiseException(e_275804, "JsonKindError");
							}
							
							if ((HEX5BHEX5D_241174(HEX5BHEX5D_241841(temp_275175, i_275199), makeNimstrLit("description")).kind == 0)) {
							Tmp7 = [];
							}
							else {
								var Tmp8 = HEX5BHEX5D_241174(HEX5BHEX5D_241841(temp_275175, i_275199), makeNimstrLit("description"));
								if (ConstSet28[Tmp8.kind]===undefined) { raiseFieldError(makeNimstrLit("str")); }
							Tmp7 = Tmp8.str;
							}
							
							res_275270.description = nimCopy(null, Tmp7, NTI36040);
						Tmp4 = res_275270;
						}
						
						if (list_275257 != null) { list_275257.push(Tmp4); } else { list_275257 = [Tmp4]; };
						F.line = 3682;
						i_277024 = addInt(i_277024, 1);
					}
			} while(false);
		} while(false);
		var list_275833 = nimCopy(null, list_275257, NTI275271);
		if (is_some_275852(state_275143[0].list)) {
		F.line = 39;
		add_276254((Tmp9 = get_276077(state_275143[0].list), Tmp9)[0][Tmp9[1]], "courses", list_275833);
		}
		else {
			F.line = 41;
			nimCopy(state_275143[0].list, some_276322({courses: nimCopy(null, list_275833, NTI275271)}), NTI275037);
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function new_vnode_190028(kind_190030) {
	var result_190031 = null;

	var F={procname:"vdom.newVNode",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 259;
		result_190031 = {kind: kind_190030, index: -1, m_type: NTI187724, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_190031;

}

function add_188754(parent_188756, kid_188757) {
	var F={procname:"vdom.add",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 253;
		if (parent_188756.kids != null) { parent_188756.kids.push(kid_188757); } else { parent_188756.kids = [kid_188757]; };
	framePtr = F.prev;

	
}

function tree_190046(kind_190048, kids_190050) {
	var result_190051 = null;

	var F={procname:"vdom.tree",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 262;
		result_190051 = new_vnode_190028(kind_190048);
		L1: do {
			F.line = 263;
			var k_190089 = null;
			F.line = 2284;
			var i_277069 = 0;
			L2: do {
				F.line = 2285;
					L3: while (true) {
					if (!(i_277069 < (kids_190050 != null ? kids_190050.length : 0))) break L3;
						F.line = 263;
						k_190089 = kids_190050[chckIndx(i_277069, 0, kids_190050.length+0-1)-0];
						F.line = 263;
						add_188754(result_190051, k_190089);
						F.line = 2287;
						i_277069 = addInt(i_277069, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_190051;

}

function text_190163(s_190165) {
	var result_190166 = null;

	var F={procname:"vdom.text",prev:framePtr,filename:"../../../../../../../.nimble/pkgs/karax-#head/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 271;
		result_190166 = {kind: 0, text: toJSStr(s_190165), index: -1, m_type: NTI187724, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_190166;

}

function create_dom_276627() {
		var Tmp1;

	var result_276629 = null;

	var F={procname:"hw.createDom",prev:framePtr,filename:"hw.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (is_none_276104(state_275143[0].list)) {
		if (!(state_275143[0].loading)) {
		F.line = 50;
		state_275143[0].loading = true;
		F.line = 51;
		ajax_get_218176("/courses", [{Field0: "Accepts", Field1: "application/json"}], on_course_list_275159, true, kxi_205324[0]);
		}
		
		F.line = 52;
		F.line = 52;
		var tmp_276712 = tree_190046(43, []);
		F.line = 53;
		add_188754(tmp_276712, text_190163(makeNimstrLit("loading")));
		result_276629 = tmp_276712;
		break BeforeRet;
		}
		
		F.line = 54;
		var list_276783 = (Tmp1 = get_276077(state_275143[0].list), Tmp1)[0][Tmp1[1]];
		F.line = 55;
		F.line = 56;
		var tmp_276784 = tree_190046(43, []);
		L2: do {
			F.line = 57;
			var i_276805 = 0;
			F.line = 3678;
			var colontmp__277010 = 0;
			F.line = 57;
			colontmp__277010 = (list_276783.courses != null ? list_276783.courses.length : 0);
			F.line = 3679;
			var i_277012 = 0;
			L3: do {
				F.line = 3680;
					L4: while (true) {
					if (!(i_277012 < colontmp__277010)) break L4;
						F.line = 57;
						i_276805 = i_277012;
						F.line = 58;
						var course_276806 = list_276783.courses[chckIndx(i_276805, 0, list_276783.courses.length+0-1)-0];
						F.line = 59;
						add_188754(tmp_276784, text_190163(course_276806.name));
						F.line = 3682;
						i_277012 = addInt(i_277012, 1);
					}
			} while(false);
		} while(false);
		result_276629 = tmp_276784;
	} while (false);
	framePtr = F.prev;

	return result_276629;

}
set_renderer_215274(create_dom_276627, "ROOT", null);
